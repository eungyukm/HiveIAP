




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

            
using System.Collections.Generic; 
namespace NetProtocol.Packet.C2G
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool PlayerSelectReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSelectReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerSelectReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerSelectReq, Common.PlayerSelectReq);
        }
}

public bool PlayerSelectReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSelectReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerSelectReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerSelectReq, Common.PlayerSelectReq);
        }
}
public bool PlayerEnterStageFirstReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFirstReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFirstReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerEnterStageFirstReq, Common.PlayerEnterStageFirstReq);
        }
}

public bool PlayerEnterStageFirstReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFirstReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFirstReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerEnterStageFirstReq, Common.PlayerEnterStageFirstReq);
        }
}
public bool PlayerEnterStageSecondReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageSecondReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageSecondReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerEnterStageSecondReq, Common.PlayerEnterStageSecondReq);
        }
}

public bool PlayerEnterStageSecondReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageSecondReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageSecondReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerEnterStageSecondReq, Common.PlayerEnterStageSecondReq);
        }
}
public bool PlayerEnterStageThirdReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageThirdReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageThirdReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerEnterStageThirdReq, Common.PlayerEnterStageThirdReq);
        }
}

public bool PlayerEnterStageThirdReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageThirdReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageThirdReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerEnterStageThirdReq, Common.PlayerEnterStageThirdReq);
        }
}
public bool PlayerEnterStageFourthReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFourthReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFourthReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerEnterStageFourthReq, Common.PlayerEnterStageFourthReq);
        }
}

public bool PlayerEnterStageFourthReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFourthReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFourthReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerEnterStageFourthReq, Common.PlayerEnterStageFourthReq);
        }
}
public bool PlayerEnterStageFifthReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFifthReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFifthReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerEnterStageFifthReq, Common.PlayerEnterStageFifthReq);
        }
}

public bool PlayerEnterStageFifthReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerEnterStageFifthReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerEnterStageFifthReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerEnterStageFifthReq, Common.PlayerEnterStageFifthReq);
        }
}
public bool PlayerGameEnterReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerGameEnterReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerGameEnterReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerGameEnterReq, Common.PlayerGameEnterReq);
        }
}

public bool PlayerGameEnterReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerGameEnterReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerGameEnterReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerGameEnterReq, Common.PlayerGameEnterReq);
        }
}
public bool AuthenticateBotCredentialReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AuthenticateBotCredentialReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AuthenticateBotCredentialReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AuthenticateBotCredentialReq, Common.AuthenticateBotCredentialReq);
        }
}

public bool AuthenticateBotCredentialReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AuthenticateBotCredentialReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AuthenticateBotCredentialReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AuthenticateBotCredentialReq, Common.AuthenticateBotCredentialReq);
        }
}
public bool DesignateBindStoneReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.DesignateBindStoneReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.DesignateBindStoneReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_DesignateBindStoneReq, Common.DesignateBindStoneReq);
        }
}

public bool DesignateBindStoneReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.DesignateBindStoneReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.DesignateBindStoneReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_DesignateBindStoneReq, Common.DesignateBindStoneReq);
        }
}
public bool PortalByBindStoneReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PortalByBindStoneReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PortalByBindStoneReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PortalByBindStoneReq, Common.PortalByBindStoneReq);
        }
}

public bool PortalByBindStoneReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PortalByBindStoneReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PortalByBindStoneReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PortalByBindStoneReq, Common.PortalByBindStoneReq);
        }
}
public bool PlayerBlackRosterGetPreferenceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterGetPreferenceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterGetPreferenceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterGetPreferenceReq, Common.PlayerBlackRosterGetPreferenceReq);
        }
}

public bool PlayerBlackRosterGetPreferenceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterGetPreferenceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterGetPreferenceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterGetPreferenceReq, Common.PlayerBlackRosterGetPreferenceReq);
        }
}
public bool PlayerBlackRosterObservingReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterObservingReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterObservingReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterObservingReq, Common.PlayerBlackRosterObservingReq);
        }
}

public bool PlayerBlackRosterObservingReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterObservingReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterObservingReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterObservingReq, Common.PlayerBlackRosterObservingReq);
        }
}
public bool PlayerBlackRosterProvocationReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterProvocationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterProvocationReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterProvocationReq, Common.PlayerBlackRosterProvocationReq);
        }
}

public bool PlayerBlackRosterProvocationReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterProvocationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterProvocationReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterProvocationReq, Common.PlayerBlackRosterProvocationReq);
        }
}
public bool PlayerBlackRosterRankReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterRankReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterRankReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterRankReq, Common.PlayerBlackRosterRankReq);
        }
}

public bool PlayerBlackRosterRankReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterRankReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterRankReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterRankReq, Common.PlayerBlackRosterRankReq);
        }
}
public bool PlayerBlackRosterRevengeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterRevengeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterRevengeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterRevengeReq, Common.PlayerBlackRosterRevengeReq);
        }
}

public bool PlayerBlackRosterRevengeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterRevengeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterRevengeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterRevengeReq, Common.PlayerBlackRosterRevengeReq);
        }
}
public bool PlayerBlackRosterSetPreferenceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterSetPreferenceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterSetPreferenceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterSetPreferenceReq, Common.PlayerBlackRosterSetPreferenceReq);
        }
}

public bool PlayerBlackRosterSetPreferenceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterSetPreferenceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterSetPreferenceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterSetPreferenceReq, Common.PlayerBlackRosterSetPreferenceReq);
        }
}
public bool PlayerBlackRostersReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRostersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRostersReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRostersReq, Common.PlayerBlackRostersReq);
        }
}

public bool PlayerBlackRostersReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRostersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRostersReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRostersReq, Common.PlayerBlackRostersReq);
        }
}
public bool PlayerBlackRosterLastWeekRankReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterLastWeekRankReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterLastWeekRankReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerBlackRosterLastWeekRankReq, Common.PlayerBlackRosterLastWeekRankReq);
        }
}

public bool PlayerBlackRosterLastWeekRankReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerBlackRosterLastWeekRankReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerBlackRosterLastWeekRankReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerBlackRosterLastWeekRankReq, Common.PlayerBlackRosterLastWeekRankReq);
        }
}
public bool CheatMessageV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CheatMessageV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CheatMessageV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CheatMessageV2Req, Common.CheatMessageV2Req);
        }
}

public bool CheatMessageV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CheatMessageV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CheatMessageV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CheatMessageV2Req, Common.CheatMessageV2Req);
        }
}
public bool AccountBlockPlayerAddReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerAddReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerAddReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AccountBlockPlayerAddReq, Common.AccountBlockPlayerAddReq);
        }
}

public bool AccountBlockPlayerAddReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerAddReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerAddReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AccountBlockPlayerAddReq, Common.AccountBlockPlayerAddReq);
        }
}
public bool AccountBlockPlayerDeleteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerDeleteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AccountBlockPlayerDeleteReq, Common.AccountBlockPlayerDeleteReq);
        }
}

public bool AccountBlockPlayerDeleteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerDeleteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AccountBlockPlayerDeleteReq, Common.AccountBlockPlayerDeleteReq);
        }
}
public bool AccountBlockPlayerReasonEditReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerReasonEditReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerReasonEditReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AccountBlockPlayerReasonEditReq, Common.AccountBlockPlayerReasonEditReq);
        }
}

public bool AccountBlockPlayerReasonEditReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayerReasonEditReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayerReasonEditReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AccountBlockPlayerReasonEditReq, Common.AccountBlockPlayerReasonEditReq);
        }
}
public bool AccountBlockPlayersReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayersReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AccountBlockPlayersReq, Common.AccountBlockPlayersReq);
        }
}

public bool AccountBlockPlayersReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AccountBlockPlayersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AccountBlockPlayersReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AccountBlockPlayersReq, Common.AccountBlockPlayersReq);
        }
}
public bool ChatMessageV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ChatMessageV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ChatMessageV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ChatMessageV2Req, Common.ChatMessageV2Req);
        }
}

public bool ChatMessageV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ChatMessageV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ChatMessageV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ChatMessageV2Req, Common.ChatMessageV2Req);
        }
}
public bool PlayerSearchV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSearchV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerSearchV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerSearchV2Req, Common.PlayerSearchV2Req);
        }
}

public bool PlayerSearchV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSearchV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerSearchV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerSearchV2Req, Common.PlayerSearchV2Req);
        }
}
public bool LinkItemInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.LinkItemInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LinkItemInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LinkItemInfoReq, Common.LinkItemInfoReq);
        }
}

public bool LinkItemInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.LinkItemInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LinkItemInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LinkItemInfoReq, Common.LinkItemInfoReq);
        }
}
public bool CostumeCardBuildReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardBuildReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeCardBuildReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeCardBuildReq, Common.CostumeCardBuildReq);
        }
}

public bool CostumeCardBuildReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardBuildReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeCardBuildReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeCardBuildReq, Common.CostumeCardBuildReq);
        }
}
public bool CostumeCardGachaReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardGachaReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeCardGachaReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeCardGachaReq, Common.CostumeCardGachaReq);
        }
}

public bool CostumeCardGachaReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardGachaReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeCardGachaReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeCardGachaReq, Common.CostumeCardGachaReq);
        }
}
public bool CostumeCardInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeCardInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeCardInfoReq, Common.CostumeCardInfoReq);
        }
}

public bool CostumeCardInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeCardInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeCardInfoReq, Common.CostumeCardInfoReq);
        }
}
public bool CostumeCardMixReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardMixReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeCardMixReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeCardMixReq, Common.CostumeCardMixReq);
        }
}

public bool CostumeCardMixReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeCardMixReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeCardMixReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeCardMixReq, Common.CostumeCardMixReq);
        }
}
public bool CostumeCollectReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeCollectReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeCollectReq, Common.CostumeCollectReq);
        }
}

public bool CostumeCollectReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeCollectReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeCollectReq, Common.CostumeCollectReq);
        }
}
public bool CostumeEquipBodyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipBodyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeEquipBodyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeEquipBodyReq, Common.CostumeEquipBodyReq);
        }
}

public bool CostumeEquipBodyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipBodyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeEquipBodyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeEquipBodyReq, Common.CostumeEquipBodyReq);
        }
}
public bool CostumeEquipBodyShowReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipBodyShowReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeEquipBodyShowReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeEquipBodyShowReq, Common.CostumeEquipBodyShowReq);
        }
}

public bool CostumeEquipBodyShowReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipBodyShowReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeEquipBodyShowReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeEquipBodyShowReq, Common.CostumeEquipBodyShowReq);
        }
}
public bool CostumeEquipHeadReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipHeadReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeEquipHeadReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeEquipHeadReq, Common.CostumeEquipHeadReq);
        }
}

public bool CostumeEquipHeadReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipHeadReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeEquipHeadReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeEquipHeadReq, Common.CostumeEquipHeadReq);
        }
}
public bool CostumeEquipHeadShowReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipHeadShowReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeEquipHeadShowReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeEquipHeadShowReq, Common.CostumeEquipHeadShowReq);
        }
}

public bool CostumeEquipHeadShowReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeEquipHeadShowReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeEquipHeadShowReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeEquipHeadShowReq, Common.CostumeEquipHeadShowReq);
        }
}
public bool CostumeInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeInfoReq, Common.CostumeInfoReq);
        }
}

public bool CostumeInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeInfoReq, Common.CostumeInfoReq);
        }
}
public bool CostumeConfirmAcceptReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeConfirmAcceptReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeConfirmAcceptReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeConfirmAcceptReq, Common.CostumeConfirmAcceptReq);
        }
}

public bool CostumeConfirmAcceptReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeConfirmAcceptReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeConfirmAcceptReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeConfirmAcceptReq, Common.CostumeConfirmAcceptReq);
        }
}
public bool CostumeConfirmChangeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CostumeConfirmChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeConfirmChangeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeConfirmChangeReq, Common.CostumeConfirmChangeReq);
        }
}

public bool CostumeConfirmChangeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CostumeConfirmChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeConfirmChangeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeConfirmChangeReq, Common.CostumeConfirmChangeReq);
        }
}
public bool CostumeConfirmInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CostumeConfirmInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CostumeConfirmInfoReq, Common.CostumeConfirmInfoReq);
        }
}

public bool CostumeConfirmInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CostumeConfirmInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CostumeConfirmInfoReq, Common.CostumeConfirmInfoReq);
        }
}
public bool PortalEffectReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PortalEffectReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PortalEffectReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PortalEffectReq, Common.PortalEffectReq);
        }
}

public bool PortalEffectReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PortalEffectReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PortalEffectReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PortalEffectReq, Common.PortalEffectReq);
        }
}
public bool AttainmentDailyRewardV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AttainmentDailyRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AttainmentDailyRewardV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AttainmentDailyRewardV2Req, Common.AttainmentDailyRewardV2Req);
        }
}

public bool AttainmentDailyRewardV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AttainmentDailyRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AttainmentDailyRewardV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AttainmentDailyRewardV2Req, Common.AttainmentDailyRewardV2Req);
        }
}
public bool AttainmentNormalRewardV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AttainmentNormalRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AttainmentNormalRewardV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AttainmentNormalRewardV2Req, Common.AttainmentNormalRewardV2Req);
        }
}

public bool AttainmentNormalRewardV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AttainmentNormalRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AttainmentNormalRewardV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AttainmentNormalRewardV2Req, Common.AttainmentNormalRewardV2Req);
        }
}
public bool AttendanceRewardV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AttendanceRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AttendanceRewardV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AttendanceRewardV2Req, Common.AttendanceRewardV2Req);
        }
}

public bool AttendanceRewardV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AttendanceRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AttendanceRewardV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AttendanceRewardV2Req, Common.AttendanceRewardV2Req);
        }
}
public bool BossScheduleReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BossScheduleReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BossScheduleReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BossScheduleReq, Common.BossScheduleReq);
        }
}

public bool BossScheduleReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BossScheduleReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BossScheduleReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BossScheduleReq, Common.BossScheduleReq);
        }
}
public bool EventExchangeRewardV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.EventExchangeRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EventExchangeRewardV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EventExchangeRewardV2Req, Common.EventExchangeRewardV2Req);
        }
}

public bool EventExchangeRewardV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.EventExchangeRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EventExchangeRewardV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EventExchangeRewardV2Req, Common.EventExchangeRewardV2Req);
        }
}
public bool GuildAdminBuffActiveReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminBuffActiveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminBuffActiveReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminBuffActiveReq, Common.GuildAdminBuffActiveReq);
        }
}

public bool GuildAdminBuffActiveReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminBuffActiveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminBuffActiveReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminBuffActiveReq, Common.GuildAdminBuffActiveReq);
        }
}
public bool GuildAdminBuffBuyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminBuffBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminBuffBuyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminBuffBuyReq, Common.GuildAdminBuffBuyReq);
        }
}

public bool GuildAdminBuffBuyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminBuffBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminBuffBuyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminBuffBuyReq, Common.GuildAdminBuffBuyReq);
        }
}
public bool GuildAdminInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminInfoReq, Common.GuildAdminInfoReq);
        }
}

public bool GuildAdminInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminInfoReq, Common.GuildAdminInfoReq);
        }
}
public bool GuildAdminLevelUpReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminLevelUpReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminLevelUpReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminLevelUpReq, Common.GuildAdminLevelUpReq);
        }
}

public bool GuildAdminLevelUpReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminLevelUpReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminLevelUpReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminLevelUpReq, Common.GuildAdminLevelUpReq);
        }
}
public bool GuildAdminMasterChangeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMasterChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminMasterChangeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminMasterChangeReq, Common.GuildAdminMasterChangeReq);
        }
}

public bool GuildAdminMasterChangeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMasterChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminMasterChangeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminMasterChangeReq, Common.GuildAdminMasterChangeReq);
        }
}
public bool GuildAdminMemberBanishReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMemberBanishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminMemberBanishReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminMemberBanishReq, Common.GuildAdminMemberBanishReq);
        }
}

public bool GuildAdminMemberBanishReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMemberBanishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminMemberBanishReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminMemberBanishReq, Common.GuildAdminMemberBanishReq);
        }
}
public bool GuildAdminMemberUpdateReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMemberUpdateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminMemberUpdateReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminMemberUpdateReq, Common.GuildAdminMemberUpdateReq);
        }
}

public bool GuildAdminMemberUpdateReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminMemberUpdateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminMemberUpdateReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminMemberUpdateReq, Common.GuildAdminMemberUpdateReq);
        }
}
public bool GuildAdminUpdateBaseReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateBaseReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateBaseReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminUpdateBaseReq, Common.GuildAdminUpdateBaseReq);
        }
}

public bool GuildAdminUpdateBaseReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateBaseReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateBaseReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminUpdateBaseReq, Common.GuildAdminUpdateBaseReq);
        }
}
public bool GuildAdminUpdateIntroReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateIntroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateIntroReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminUpdateIntroReq, Common.GuildAdminUpdateIntroReq);
        }
}

public bool GuildAdminUpdateIntroReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateIntroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateIntroReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminUpdateIntroReq, Common.GuildAdminUpdateIntroReq);
        }
}
public bool GuildAdminUpdateNoticeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateNoticeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateNoticeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminUpdateNoticeReq, Common.GuildAdminUpdateNoticeReq);
        }
}

public bool GuildAdminUpdateNoticeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateNoticeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateNoticeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminUpdateNoticeReq, Common.GuildAdminUpdateNoticeReq);
        }
}
public bool GuildAdminUpdateTendencyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateTendencyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateTendencyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminUpdateTendencyReq, Common.GuildAdminUpdateTendencyReq);
        }
}

public bool GuildAdminUpdateTendencyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateTendencyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateTendencyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminUpdateTendencyReq, Common.GuildAdminUpdateTendencyReq);
        }
}
public bool GuildAdminUpdateTypeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateTypeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateTypeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAdminUpdateTypeReq, Common.GuildAdminUpdateTypeReq);
        }
}

public bool GuildAdminUpdateTypeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildAdminUpdateTypeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAdminUpdateTypeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAdminUpdateTypeReq, Common.GuildAdminUpdateTypeReq);
        }
}
public bool GuildAttendReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildAttendReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildAttendReq, Common.GuildAttendReq);
        }
}

public bool GuildAttendReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildAttendReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildAttendReq, Common.GuildAttendReq);
        }
}
public bool GuildBuffInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildBuffInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildBuffInfoReq, Common.GuildBuffInfoReq);
        }
}

public bool GuildBuffInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildBuffInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildBuffInfoReq, Common.GuildBuffInfoReq);
        }
}
public bool GuildCreateReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildCreateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildCreateReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildCreateReq, Common.GuildCreateReq);
        }
}

public bool GuildCreateReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildCreateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildCreateReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildCreateReq, Common.GuildCreateReq);
        }
}
public bool GuildDeleteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildDeleteReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildDeleteReq, Common.GuildDeleteReq);
        }
}

public bool GuildDeleteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildDeleteReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildDeleteReq, Common.GuildDeleteReq);
        }
}
public bool GuildDonateReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildDonateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildDonateReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildDonateReq, Common.GuildDonateReq);
        }
}

public bool GuildDonateReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildDonateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildDonateReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildDonateReq, Common.GuildDonateReq);
        }
}
public bool GuildDonationByCronV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildDonationByCronV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildDonationByCronV2Req, Common.GuildDonationByCronV2Req);
        }
}

public bool GuildDonationByCronV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildDonationByCronV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildDonationByCronV2Req, Common.GuildDonationByCronV2Req);
        }
}
public bool GuildFindReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildFindReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildFindReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildFindReq, Common.GuildFindReq);
        }
}

public bool GuildFindReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildFindReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildFindReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildFindReq, Common.GuildFindReq);
        }
}
public bool GuildHistroyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildHistroyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildHistroyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildHistroyReq, Common.GuildHistroyReq);
        }
}

public bool GuildHistroyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildHistroyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildHistroyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildHistroyReq, Common.GuildHistroyReq);
        }
}
public bool GuildInfoCallReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildInfoCallReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildInfoCallReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildInfoCallReq, Common.GuildInfoCallReq);
        }
}

public bool GuildInfoCallReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildInfoCallReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildInfoCallReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildInfoCallReq, Common.GuildInfoCallReq);
        }
}
public bool GuildInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildInfoReq, Common.GuildInfoReq);
        }
}

public bool GuildInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildInfoReq, Common.GuildInfoReq);
        }
}
public bool GuildJoinRequestConfirmReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildJoinRequestConfirmReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildJoinRequestConfirmReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildJoinRequestConfirmReq, Common.GuildJoinRequestConfirmReq);
        }
}

public bool GuildJoinRequestConfirmReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildJoinRequestConfirmReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildJoinRequestConfirmReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildJoinRequestConfirmReq, Common.GuildJoinRequestConfirmReq);
        }
}
public bool GuildJoinRequestListReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildJoinRequestListReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildJoinRequestListReq, Common.GuildJoinRequestListReq);
        }
}

public bool GuildJoinRequestListReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildJoinRequestListReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildJoinRequestListReq, Common.GuildJoinRequestListReq);
        }
}
public bool GuildLeaveReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildLeaveReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildLeaveReq, Common.GuildLeaveReq);
        }
}

public bool GuildLeaveReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildLeaveReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildLeaveReq, Common.GuildLeaveReq);
        }
}
public bool GuildLiveInviteConfirmReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildLiveInviteConfirmReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildLiveInviteConfirmReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildLiveInviteConfirmReq, Common.GuildLiveInviteConfirmReq);
        }
}

public bool GuildLiveInviteConfirmReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildLiveInviteConfirmReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildLiveInviteConfirmReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildLiveInviteConfirmReq, Common.GuildLiveInviteConfirmReq);
        }
}
public bool GuildLiveInviteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildLiveInviteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildLiveInviteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildLiveInviteReq, Common.GuildLiveInviteReq);
        }
}

public bool GuildLiveInviteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildLiveInviteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildLiveInviteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildLiveInviteReq, Common.GuildLiveInviteReq);
        }
}
public bool GuildMemberInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildMemberInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildMemberInfoReq, Common.GuildMemberInfoReq);
        }
}

public bool GuildMemberInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildMemberInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildMemberInfoReq, Common.GuildMemberInfoReq);
        }
}
public bool GuildSignRequestCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildSignRequestCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildSignRequestCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildSignRequestCancelReq, Common.GuildSignRequestCancelReq);
        }
}

public bool GuildSignRequestCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildSignRequestCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildSignRequestCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildSignRequestCancelReq, Common.GuildSignRequestCancelReq);
        }
}
public bool GuildSignRequestListReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildSignRequestListReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildSignRequestListReq, Common.GuildSignRequestListReq);
        }
}

public bool GuildSignRequestListReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildSignRequestListReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildSignRequestListReq, Common.GuildSignRequestListReq);
        }
}
public bool GuildSignRequestReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildSignRequestReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildSignRequestReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildSignRequestReq, Common.GuildSignRequestReq);
        }
}

public bool GuildSignRequestReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildSignRequestReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildSignRequestReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildSignRequestReq, Common.GuildSignRequestReq);
        }
}
public bool GuildVoteInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildVoteInfoReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildVoteInfoReq, Common.GuildVoteInfoReq);
        }
}

public bool GuildVoteInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildVoteInfoReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildVoteInfoReq, Common.GuildVoteInfoReq);
        }
}
public bool GuildVoteMasterImpeachReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildVoteMasterImpeachReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildVoteMasterImpeachReq, Common.GuildVoteMasterImpeachReq);
        }
}

public bool GuildVoteMasterImpeachReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildVoteMasterImpeachReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildVoteMasterImpeachReq, Common.GuildVoteMasterImpeachReq);
        }
}
public bool GuildVoteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildVoteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildVoteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildVoteReq, Common.GuildVoteReq);
        }
}

public bool GuildVoteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildVoteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildVoteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildVoteReq, Common.GuildVoteReq);
        }
}
public bool GuildWaitingMemberListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildWaitingMemberListV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildWaitingMemberListV2Req, Common.GuildWaitingMemberListV2Req);
        }
}

public bool GuildWaitingMemberListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildWaitingMemberListV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildWaitingMemberListV2Req, Common.GuildWaitingMemberListV2Req);
        }
}
public bool GuildWarehouseChangeSizeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildWarehouseChangeSizeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildWarehouseChangeSizeV2Req, Common.GuildWarehouseChangeSizeV2Req);
        }
}

public bool GuildWarehouseChangeSizeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildWarehouseChangeSizeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildWarehouseChangeSizeV2Req, Common.GuildWarehouseChangeSizeV2Req);
        }
}
public bool GuildWarehouseInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildWarehouseInfoV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildWarehouseInfoV2Req, Common.GuildWarehouseInfoV2Req);
        }
}

public bool GuildWarehouseInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildWarehouseInfoV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildWarehouseInfoV2Req, Common.GuildWarehouseInfoV2Req);
        }
}
public bool GuildWarehouseItemMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseItemMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildWarehouseItemMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildWarehouseItemMoveV2Req, Common.GuildWarehouseItemMoveV2Req);
        }
}

public bool GuildWarehouseItemMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseItemMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildWarehouseItemMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildWarehouseItemMoveV2Req, Common.GuildWarehouseItemMoveV2Req);
        }
}
public bool GuildWarehouseWalletMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseWalletMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildWarehouseWalletMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildWarehouseWalletMoveV2Req, Common.GuildWarehouseWalletMoveV2Req);
        }
}

public bool GuildWarehouseWalletMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildWarehouseWalletMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildWarehouseWalletMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildWarehouseWalletMoveV2Req, Common.GuildWarehouseWalletMoveV2Req);
        }
}
public bool GuildTerritoryInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildTerritoryInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildTerritoryInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildTerritoryInfoReq, Common.GuildTerritoryInfoReq);
        }
}

public bool GuildTerritoryInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildTerritoryInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildTerritoryInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildTerritoryInfoReq, Common.GuildTerritoryInfoReq);
        }
}
public bool GuildTerritorySetReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildTerritorySetReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildTerritorySetReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildTerritorySetReq, Common.GuildTerritorySetReq);
        }
}

public bool GuildTerritorySetReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildTerritorySetReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildTerritorySetReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildTerritorySetReq, Common.GuildTerritorySetReq);
        }
}
public bool WorldTerritoryOverviewReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WorldTerritoryOverviewReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WorldTerritoryOverviewReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WorldTerritoryOverviewReq, Common.WorldTerritoryOverviewReq);
        }
}

public bool WorldTerritoryOverviewReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WorldTerritoryOverviewReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WorldTerritoryOverviewReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WorldTerritoryOverviewReq, Common.WorldTerritoryOverviewReq);
        }
}
public bool DungeonEnterV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.DungeonEnterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.DungeonEnterV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_DungeonEnterV2Req, Common.DungeonEnterV2Req);
        }
}

public bool DungeonEnterV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.DungeonEnterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.DungeonEnterV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_DungeonEnterV2Req, Common.DungeonEnterV2Req);
        }
}
public bool DungeonGiveUpV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.DungeonGiveUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.DungeonGiveUpV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_DungeonGiveUpV2Req, Common.DungeonGiveUpV2Req);
        }
}

public bool DungeonGiveUpV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.DungeonGiveUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.DungeonGiveUpV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_DungeonGiveUpV2Req, Common.DungeonGiveUpV2Req);
        }
}
public bool DungeonLeaveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.DungeonLeaveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.DungeonLeaveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_DungeonLeaveV2Req, Common.DungeonLeaveV2Req);
        }
}

public bool DungeonLeaveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.DungeonLeaveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.DungeonLeaveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_DungeonLeaveV2Req, Common.DungeonLeaveV2Req);
        }
}
public bool DungeonLoadingCompleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.DungeonLoadingCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.DungeonLoadingCompleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_DungeonLoadingCompleteV2Req, Common.DungeonLoadingCompleteV2Req);
        }
}

public bool DungeonLoadingCompleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.DungeonLoadingCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.DungeonLoadingCompleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_DungeonLoadingCompleteV2Req, Common.DungeonLoadingCompleteV2Req);
        }
}
public bool InteractStartReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.InteractStartReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.InteractStartReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_InteractStartReq, Common.InteractStartReq);
        }
}

public bool InteractStartReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.InteractStartReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.InteractStartReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_InteractStartReq, Common.InteractStartReq);
        }
}
public bool InteractEndReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.InteractEndReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.InteractEndReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_InteractEndReq, Common.InteractEndReq);
        }
}

public bool InteractEndReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.InteractEndReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.InteractEndReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_InteractEndReq, Common.InteractEndReq);
        }
}
public bool InteractCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.InteractCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.InteractCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_InteractCancelReq, Common.InteractCancelReq);
        }
}

public bool InteractCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.InteractCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.InteractCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_InteractCancelReq, Common.InteractCancelReq);
        }
}
public bool EquipmentVisibleV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.EquipmentVisibleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EquipmentVisibleV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EquipmentVisibleV2Req, Common.EquipmentVisibleV2Req);
        }
}

public bool EquipmentVisibleV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.EquipmentVisibleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EquipmentVisibleV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EquipmentVisibleV2Req, Common.EquipmentVisibleV2Req);
        }
}
public bool InventoryChangeSizeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.InventoryChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.InventoryChangeSizeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_InventoryChangeSizeV2Req, Common.InventoryChangeSizeV2Req);
        }
}

public bool InventoryChangeSizeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.InventoryChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.InventoryChangeSizeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_InventoryChangeSizeV2Req, Common.InventoryChangeSizeV2Req);
        }
}
public bool ItemAddOptionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemAddOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemAddOptionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemAddOptionV2Req, Common.ItemAddOptionV2Req);
        }
}

public bool ItemAddOptionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemAddOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemAddOptionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemAddOptionV2Req, Common.ItemAddOptionV2Req);
        }
}
public bool ItemChangeOptionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemChangeOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemChangeOptionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemChangeOptionV2Req, Common.ItemChangeOptionV2Req);
        }
}

public bool ItemChangeOptionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemChangeOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemChangeOptionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemChangeOptionV2Req, Common.ItemChangeOptionV2Req);
        }
}
public bool ItemCollectionBookmarksRegisterV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionBookmarksRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemCollectionBookmarksRegisterV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemCollectionBookmarksRegisterV2Req, Common.ItemCollectionBookmarksRegisterV2Req);
        }
}

public bool ItemCollectionBookmarksRegisterV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionBookmarksRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemCollectionBookmarksRegisterV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemCollectionBookmarksRegisterV2Req, Common.ItemCollectionBookmarksRegisterV2Req);
        }
}
public bool ItemCollectionBookmarksUnregisterV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionBookmarksUnregisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemCollectionBookmarksUnregisterV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemCollectionBookmarksUnregisterV2Req, Common.ItemCollectionBookmarksUnregisterV2Req);
        }
}

public bool ItemCollectionBookmarksUnregisterV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionBookmarksUnregisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemCollectionBookmarksUnregisterV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemCollectionBookmarksUnregisterV2Req, Common.ItemCollectionBookmarksUnregisterV2Req);
        }
}
public bool ItemCollectionRegisterV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemCollectionRegisterV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemCollectionRegisterV2Req, Common.ItemCollectionRegisterV2Req);
        }
}

public bool ItemCollectionRegisterV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemCollectionRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemCollectionRegisterV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemCollectionRegisterV2Req, Common.ItemCollectionRegisterV2Req);
        }
}
public bool ItemCombineV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemCombineV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemCombineV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemCombineV2Req, Common.ItemCombineV2Req);
        }
}

public bool ItemCombineV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemCombineV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemCombineV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemCombineV2Req, Common.ItemCombineV2Req);
        }
}
public bool ItemDeleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemDeleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemDeleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemDeleteV2Req, Common.ItemDeleteV2Req);
        }
}

public bool ItemDeleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemDeleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemDeleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemDeleteV2Req, Common.ItemDeleteV2Req);
        }
}
public bool ItemDisassembleV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemDisassembleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemDisassembleV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemDisassembleV2Req, Common.ItemDisassembleV2Req);
        }
}

public bool ItemDisassembleV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemDisassembleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemDisassembleV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemDisassembleV2Req, Common.ItemDisassembleV2Req);
        }
}
public bool ItemEnchantV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemEnchantV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemEnchantV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemEnchantV2Req, Common.ItemEnchantV2Req);
        }
}

public bool ItemEnchantV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemEnchantV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemEnchantV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemEnchantV2Req, Common.ItemEnchantV2Req);
        }
}
public bool ItemEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemEquipV2Req, Common.ItemEquipV2Req);
        }
}

public bool ItemEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemEquipV2Req, Common.ItemEquipV2Req);
        }
}
public bool ItemIntensionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemIntensionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemIntensionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemIntensionV2Req, Common.ItemIntensionV2Req);
        }
}

public bool ItemIntensionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemIntensionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemIntensionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemIntensionV2Req, Common.ItemIntensionV2Req);
        }
}
public bool ItemMixOptionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemMixOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemMixOptionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemMixOptionV2Req, Common.ItemMixOptionV2Req);
        }
}

public bool ItemMixOptionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemMixOptionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemMixOptionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemMixOptionV2Req, Common.ItemMixOptionV2Req);
        }
}
public bool ItemPackageUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemPackageUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemPackageUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemPackageUseV2Req, Common.ItemPackageUseV2Req);
        }
}

public bool ItemPackageUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemPackageUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemPackageUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemPackageUseV2Req, Common.ItemPackageUseV2Req);
        }
}
public bool ItemProductionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemProductionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemProductionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemProductionV2Req, Common.ItemProductionV2Req);
        }
}

public bool ItemProductionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemProductionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemProductionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemProductionV2Req, Common.ItemProductionV2Req);
        }
}
public bool ItemSelectUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemSelectUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemSelectUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemSelectUseV2Req, Common.ItemSelectUseV2Req);
        }
}

public bool ItemSelectUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemSelectUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemSelectUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemSelectUseV2Req, Common.ItemSelectUseV2Req);
        }
}
public bool ItemUpgradeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemUpgradeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemUpgradeV2Req, Common.ItemUpgradeV2Req);
        }
}

public bool ItemUpgradeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemUpgradeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemUpgradeV2Req, Common.ItemUpgradeV2Req);
        }
}
public bool ItemUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemUseV2Req, Common.ItemUseV2Req);
        }
}

public bool ItemUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemUseV2Req, Common.ItemUseV2Req);
        }
}
public bool PkLootingItemV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PkLootingItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PkLootingItemV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PkLootingItemV2Req, Common.PkLootingItemV2Req);
        }
}

public bool PkLootingItemV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PkLootingItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PkLootingItemV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PkLootingItemV2Req, Common.PkLootingItemV2Req);
        }
}
public bool PkLootingListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PkLootingListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PkLootingListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PkLootingListV2Req, Common.PkLootingListV2Req);
        }
}

public bool PkLootingListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PkLootingListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PkLootingListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PkLootingListV2Req, Common.PkLootingListV2Req);
        }
}
public bool WarehouseChangeSizeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WarehouseChangeSizeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WarehouseChangeSizeV2Req, Common.WarehouseChangeSizeV2Req);
        }
}

public bool WarehouseChangeSizeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseChangeSizeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WarehouseChangeSizeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WarehouseChangeSizeV2Req, Common.WarehouseChangeSizeV2Req);
        }
}
public bool WarehouseInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WarehouseInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WarehouseInfoV2Req, Common.WarehouseInfoV2Req);
        }
}

public bool WarehouseInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WarehouseInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WarehouseInfoV2Req, Common.WarehouseInfoV2Req);
        }
}
public bool WarehouseItemMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseItemMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WarehouseItemMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WarehouseItemMoveV2Req, Common.WarehouseItemMoveV2Req);
        }
}

public bool WarehouseItemMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WarehouseItemMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WarehouseItemMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WarehouseItemMoveV2Req, Common.WarehouseItemMoveV2Req);
        }
}
public bool ItemSetLockReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemSetLockReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemSetLockReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemSetLockReq, Common.ItemSetLockReq);
        }
}

public bool ItemSetLockReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemSetLockReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemSetLockReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemSetLockReq, Common.ItemSetLockReq);
        }
}
public bool ItemMarketPriceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemMarketPriceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemMarketPriceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemMarketPriceReq, Common.ItemMarketPriceReq);
        }
}

public bool ItemMarketPriceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemMarketPriceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemMarketPriceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemMarketPriceReq, Common.ItemMarketPriceReq);
        }
}
public bool ItemInheritReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ItemInheritReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ItemInheritReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ItemInheritReq, Common.ItemInheritReq);
        }
}

public bool ItemInheritReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ItemInheritReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ItemInheritReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ItemInheritReq, Common.ItemInheritReq);
        }
}
public bool MailListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MailListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MailListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MailListV2Req, Common.MailListV2Req);
        }
}

public bool MailListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MailListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MailListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MailListV2Req, Common.MailListV2Req);
        }
}
public bool MailReadAllV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MailReadAllV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MailReadAllV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MailReadAllV2Req, Common.MailReadAllV2Req);
        }
}

public bool MailReadAllV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MailReadAllV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MailReadAllV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MailReadAllV2Req, Common.MailReadAllV2Req);
        }
}
public bool MailReadV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MailReadV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MailReadV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MailReadV2Req, Common.MailReadV2Req);
        }
}

public bool MailReadV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MailReadV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MailReadV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MailReadV2Req, Common.MailReadV2Req);
        }
}
public bool MatchingApplyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MatchingApplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MatchingApplyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MatchingApplyReq, Common.MatchingApplyReq);
        }
}

public bool MatchingApplyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MatchingApplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MatchingApplyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MatchingApplyReq, Common.MatchingApplyReq);
        }
}
public bool MatchingCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MatchingCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MatchingCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MatchingCancelReq, Common.MatchingCancelReq);
        }
}

public bool MatchingCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MatchingCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MatchingCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MatchingCancelReq, Common.MatchingCancelReq);
        }
}
public bool MatchingReplyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.MatchingReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MatchingReplyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MatchingReplyReq, Common.MatchingReplyReq);
        }
}

public bool MatchingReplyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.MatchingReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MatchingReplyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MatchingReplyReq, Common.MatchingReplyReq);
        }
}
public bool AuthenticatePlayerCredentialReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AuthenticatePlayerCredentialReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AuthenticatePlayerCredentialReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AuthenticatePlayerCredentialReq, Common.AuthenticatePlayerCredentialReq);
        }
}

public bool AuthenticatePlayerCredentialReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AuthenticatePlayerCredentialReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AuthenticatePlayerCredentialReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AuthenticatePlayerCredentialReq, Common.AuthenticatePlayerCredentialReq);
        }
}
public bool BroadCastContextReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BroadCastContextReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BroadCastContextReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BroadCastContextReq, Common.BroadCastContextReq);
        }
}

public bool BroadCastContextReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BroadCastContextReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BroadCastContextReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BroadCastContextReq, Common.BroadCastContextReq);
        }
}
public bool CutSceneEndV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CutSceneEndV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CutSceneEndV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CutSceneEndV2Req, Common.CutSceneEndV2Req);
        }
}

public bool CutSceneEndV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CutSceneEndV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CutSceneEndV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CutSceneEndV2Req, Common.CutSceneEndV2Req);
        }
}
public bool CutSceneStartV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.CutSceneStartV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CutSceneStartV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CutSceneStartV2Req, Common.CutSceneStartV2Req);
        }
}

public bool CutSceneStartV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.CutSceneStartV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CutSceneStartV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CutSceneStartV2Req, Common.CutSceneStartV2Req);
        }
}
public bool LogOutReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.LogOutReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LogOutReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LogOutReq, Common.LogOutReq);
        }
}

public bool LogOutReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.LogOutReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LogOutReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LogOutReq, Common.LogOutReq);
        }
}
public bool PortalV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PortalV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PortalV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PortalV2Req, Common.PortalV2Req);
        }
}

public bool PortalV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PortalV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PortalV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PortalV2Req, Common.PortalV2Req);
        }
}
public bool ReturnToLobbyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ReturnToLobbyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReturnToLobbyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReturnToLobbyReq, Common.ReturnToLobbyReq);
        }
}

public bool ReturnToLobbyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ReturnToLobbyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReturnToLobbyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReturnToLobbyReq, Common.ReturnToLobbyReq);
        }
}
public bool ServerTimeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ServerTimeV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ServerTimeV2Req, Common.ServerTimeV2Req);
        }
}

public bool ServerTimeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ServerTimeV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ServerTimeV2Req, Common.ServerTimeV2Req);
        }
}
public bool TestPacketV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TestPacketV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TestPacketV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TestPacketV2Req, Common.TestPacketV2Req);
        }
}

public bool TestPacketV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TestPacketV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TestPacketV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TestPacketV2Req, Common.TestPacketV2Req);
        }
}
public bool TriggerActivateV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TriggerActivateV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TriggerActivateV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TriggerActivateV2Req, Common.TriggerActivateV2Req);
        }
}

public bool TriggerActivateV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TriggerActivateV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TriggerActivateV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TriggerActivateV2Req, Common.TriggerActivateV2Req);
        }
}
public bool UnionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.UnionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.UnionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_UnionV2Req, Common.UnionV2Req);
        }
}

public bool UnionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.UnionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.UnionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_UnionV2Req, Common.UnionV2Req);
        }
}
public bool ZoneLoadingCompletedReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ZoneLoadingCompletedReq;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ZoneLoadingCompletedReq, Common.ZoneLoadingCompletedReq);
        }
}

public bool ZoneLoadingCompletedReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ZoneLoadingCompletedReq;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ZoneLoadingCompletedReq, Common.ZoneLoadingCompletedReq);
        }
}
public bool BossDamagedInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BossDamagedInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BossDamagedInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BossDamagedInfoReq, Common.BossDamagedInfoReq);
        }
}

public bool BossDamagedInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BossDamagedInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BossDamagedInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BossDamagedInfoReq, Common.BossDamagedInfoReq);
        }
}
public bool PartyChangeLootingReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyChangeLootingReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyChangeLootingReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyChangeLootingReq, Common.PartyChangeLootingReq);
        }
}

public bool PartyChangeLootingReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyChangeLootingReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyChangeLootingReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyChangeLootingReq, Common.PartyChangeLootingReq);
        }
}
public bool PartyCreateReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyCreateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyCreateReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyCreateReq, Common.PartyCreateReq);
        }
}

public bool PartyCreateReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyCreateReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyCreateReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyCreateReq, Common.PartyCreateReq);
        }
}
public bool PartyDisbandReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyDisbandReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyDisbandReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyDisbandReq, Common.PartyDisbandReq);
        }
}

public bool PartyDisbandReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyDisbandReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyDisbandReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyDisbandReq, Common.PartyDisbandReq);
        }
}
public bool PartyDungeonEntranceInquiryReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyDungeonEntranceInquiryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyDungeonEntranceInquiryReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyDungeonEntranceInquiryReq, Common.PartyDungeonEntranceInquiryReq);
        }
}

public bool PartyDungeonEntranceInquiryReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyDungeonEntranceInquiryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyDungeonEntranceInquiryReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyDungeonEntranceInquiryReq, Common.PartyDungeonEntranceInquiryReq);
        }
}
public bool PartyEnterDungeonReplyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonReplyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyEnterDungeonReplyReq, Common.PartyEnterDungeonReplyReq);
        }
}

public bool PartyEnterDungeonReplyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonReplyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyEnterDungeonReplyReq, Common.PartyEnterDungeonReplyReq);
        }
}
public bool PartyEnterDungeonReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyEnterDungeonReq, Common.PartyEnterDungeonReq);
        }
}

public bool PartyEnterDungeonReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyEnterDungeonReq, Common.PartyEnterDungeonReq);
        }
}
public bool PartyInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyInfoReq, Common.PartyInfoReq);
        }
}

public bool PartyInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyInfoReq, Common.PartyInfoReq);
        }
}
public bool PartyInviteReplyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyInviteReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyInviteReplyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyInviteReplyReq, Common.PartyInviteReplyReq);
        }
}

public bool PartyInviteReplyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyInviteReplyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyInviteReplyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyInviteReplyReq, Common.PartyInviteReplyReq);
        }
}
public bool PartyInviteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyInviteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyInviteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyInviteReq, Common.PartyInviteReq);
        }
}

public bool PartyInviteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyInviteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyInviteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyInviteReq, Common.PartyInviteReq);
        }
}
public bool PartyLeaderChangeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyLeaderChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyLeaderChangeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyLeaderChangeReq, Common.PartyLeaderChangeReq);
        }
}

public bool PartyLeaderChangeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyLeaderChangeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyLeaderChangeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyLeaderChangeReq, Common.PartyLeaderChangeReq);
        }
}
public bool PartyLeaveReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyLeaveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyLeaveReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyLeaveReq, Common.PartyLeaveReq);
        }
}

public bool PartyLeaveReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyLeaveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyLeaveReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyLeaveReq, Common.PartyLeaveReq);
        }
}
public bool PartyMemberKickReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyMemberKickReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyMemberKickReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyMemberKickReq, Common.PartyMemberKickReq);
        }
}

public bool PartyMemberKickReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyMemberKickReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyMemberKickReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyMemberKickReq, Common.PartyMemberKickReq);
        }
}
public bool PartySuggestionPlayersReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartySuggestionPlayersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartySuggestionPlayersReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartySuggestionPlayersReq, Common.PartySuggestionPlayersReq);
        }
}

public bool PartySuggestionPlayersReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartySuggestionPlayersReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartySuggestionPlayersReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartySuggestionPlayersReq, Common.PartySuggestionPlayersReq);
        }
}
public bool PartyEnterDungeonCanceledReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonCanceledReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonCanceledReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PartyEnterDungeonCanceledReq, Common.PartyEnterDungeonCanceledReq);
        }
}

public bool PartyEnterDungeonCanceledReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PartyEnterDungeonCanceledReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PartyEnterDungeonCanceledReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PartyEnterDungeonCanceledReq, Common.PartyEnterDungeonCanceledReq);
        }
}
public bool PetCollectInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetCollectInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetCollectInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetCollectInfoV2Req, Common.PetCollectInfoV2Req);
        }
}

public bool PetCollectInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetCollectInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetCollectInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetCollectInfoV2Req, Common.PetCollectInfoV2Req);
        }
}
public bool PetEquipOffV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetEquipOffV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetEquipOffV2Req, Common.PetEquipOffV2Req);
        }
}

public bool PetEquipOffV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetEquipOffV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetEquipOffV2Req, Common.PetEquipOffV2Req);
        }
}
public bool PetEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetEquipV2Req, Common.PetEquipV2Req);
        }
}

public bool PetEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetEquipV2Req, Common.PetEquipV2Req);
        }
}
public bool PetFeedUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetFeedUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetFeedUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetFeedUseV2Req, Common.PetFeedUseV2Req);
        }
}

public bool PetFeedUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetFeedUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetFeedUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetFeedUseV2Req, Common.PetFeedUseV2Req);
        }
}
public bool PetGachaV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetGachaV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetGachaV2Req, Common.PetGachaV2Req);
        }
}

public bool PetGachaV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetGachaV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetGachaV2Req, Common.PetGachaV2Req);
        }
}
public bool PetInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetInfoV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetInfoV2Req, Common.PetInfoV2Req);
        }
}

public bool PetInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetInfoV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetInfoV2Req, Common.PetInfoV2Req);
        }
}
public bool PetMixV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetMixV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetMixV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetMixV2Req, Common.PetMixV2Req);
        }
}

public bool PetMixV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetMixV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetMixV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetMixV2Req, Common.PetMixV2Req);
        }
}
public bool PetUpgradeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetUpgradeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetUpgradeV2Req, Common.PetUpgradeV2Req);
        }
}

public bool PetUpgradeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetUpgradeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetUpgradeV2Req, Common.PetUpgradeV2Req);
        }
}
public bool PetInActiveBuffReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PetInActiveBuffReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PetInActiveBuffReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PetInActiveBuffReq, Common.PetInActiveBuffReq);
        }
}

public bool PetInActiveBuffReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PetInActiveBuffReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PetInActiveBuffReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PetInActiveBuffReq, Common.PetInActiveBuffReq);
        }
}
public bool PhaseFieldEndV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PhaseFieldEndV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PhaseFieldEndV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PhaseFieldEndV2Req, Common.PhaseFieldEndV2Req);
        }
}

public bool PhaseFieldEndV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PhaseFieldEndV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PhaseFieldEndV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PhaseFieldEndV2Req, Common.PhaseFieldEndV2Req);
        }
}
public bool PhaseFieldStartV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PhaseFieldStartV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PhaseFieldStartV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PhaseFieldStartV2Req, Common.PhaseFieldStartV2Req);
        }
}

public bool PhaseFieldStartV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PhaseFieldStartV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PhaseFieldStartV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PhaseFieldStartV2Req, Common.PhaseFieldStartV2Req);
        }
}
public bool PlayerDeleteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerDeleteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerDeleteReq, Common.PlayerDeleteReq);
        }
}

public bool PlayerDeleteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerDeleteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerDeleteReq, Common.PlayerDeleteReq);
        }
}
public bool PlayerGetMacroReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerGetMacroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerGetMacroReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerGetMacroReq, Common.PlayerGetMacroReq);
        }
}

public bool PlayerGetMacroReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerGetMacroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerGetMacroReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerGetMacroReq, Common.PlayerGetMacroReq);
        }
}
public bool PlayerMapMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMapMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerMapMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerMapMoveV2Req, Common.PlayerMapMoveV2Req);
        }
}

public bool PlayerMapMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMapMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerMapMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerMapMoveV2Req, Common.PlayerMapMoveV2Req);
        }
}
public bool PlayerMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerMoveV2Req, Common.PlayerMoveV2Req);
        }
}

public bool PlayerMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerMoveV2Req, Common.PlayerMoveV2Req);
        }
}
public bool PlayerMoveZoneV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMoveZoneV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerMoveZoneV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerMoveZoneV2Req, Common.PlayerMoveZoneV2Req);
        }
}

public bool PlayerMoveZoneV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerMoveZoneV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerMoveZoneV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerMoveZoneV2Req, Common.PlayerMoveZoneV2Req);
        }
}
public bool PlayerResurrectionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerResurrectionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerResurrectionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerResurrectionV2Req, Common.PlayerResurrectionV2Req);
        }
}

public bool PlayerResurrectionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerResurrectionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerResurrectionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerResurrectionV2Req, Common.PlayerResurrectionV2Req);
        }
}
public bool PlayerSetMacroReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSetMacroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerSetMacroReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerSetMacroReq, Common.PlayerSetMacroReq);
        }
}

public bool PlayerSetMacroReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSetMacroReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerSetMacroReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerSetMacroReq, Common.PlayerSetMacroReq);
        }
}
public bool PlayerSlotChangeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSlotChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerSlotChangeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerSlotChangeV2Req, Common.PlayerSlotChangeV2Req);
        }
}

public bool PlayerSlotChangeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerSlotChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerSlotChangeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerSlotChangeV2Req, Common.PlayerSlotChangeV2Req);
        }
}
public bool PlayerStatPointChangeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatPointChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerStatPointChangeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerStatPointChangeV2Req, Common.PlayerStatPointChangeV2Req);
        }
}

public bool PlayerStatPointChangeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatPointChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerStatPointChangeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerStatPointChangeV2Req, Common.PlayerStatPointChangeV2Req);
        }
}
public bool PlayerStatPointInitV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatPointInitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerStatPointInitV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerStatPointInitV2Req, Common.PlayerStatPointInitV2Req);
        }
}

public bool PlayerStatPointInitV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatPointInitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerStatPointInitV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerStatPointInitV2Req, Common.PlayerStatPointInitV2Req);
        }
}
public bool PlayerStatV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerStatV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerStatV2Req, Common.PlayerStatV2Req);
        }
}

public bool PlayerStatV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerStatV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerStatV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerStatV2Req, Common.PlayerStatV2Req);
        }
}
public bool PlayerDeathInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerDeathInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerDeathInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerDeathInfoReq, Common.PlayerDeathInfoReq);
        }
}

public bool PlayerDeathInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerDeathInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerDeathInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerDeathInfoReq, Common.PlayerDeathInfoReq);
        }
}
public bool RecoverPlayerExpReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RecoverPlayerExpReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RecoverPlayerExpReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RecoverPlayerExpReq, Common.RecoverPlayerExpReq);
        }
}

public bool RecoverPlayerExpReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RecoverPlayerExpReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RecoverPlayerExpReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RecoverPlayerExpReq, Common.RecoverPlayerExpReq);
        }
}
public bool PlayerClassUpV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerClassUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerClassUpV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerClassUpV2Req, Common.PlayerClassUpV2Req);
        }
}

public bool PlayerClassUpV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerClassUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerClassUpV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerClassUpV2Req, Common.PlayerClassUpV2Req);
        }
}
public bool QuickslotSetReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuickslotSetReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuickslotSetReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuickslotSetReq, Common.QuickslotSetReq);
        }
}

public bool QuickslotSetReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuickslotSetReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuickslotSetReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuickslotSetReq, Common.QuickslotSetReq);
        }
}
public bool PlayerExpRecoveryPopupReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerExpRecoveryPopupReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerExpRecoveryPopupReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerExpRecoveryPopupReq, Common.PlayerExpRecoveryPopupReq);
        }
}

public bool PlayerExpRecoveryPopupReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerExpRecoveryPopupReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerExpRecoveryPopupReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerExpRecoveryPopupReq, Common.PlayerExpRecoveryPopupReq);
        }
}
public bool RTTPlayerMoveV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RTTPlayerMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RTTPlayerMoveV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RTTPlayerMoveV2Req, Common.RTTPlayerMoveV2Req);
        }
}

public bool RTTPlayerMoveV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RTTPlayerMoveV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RTTPlayerMoveV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RTTPlayerMoveV2Req, Common.RTTPlayerMoveV2Req);
        }
}
public bool QuestAbandonV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestAbandonV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestAbandonV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestAbandonV2Req, Common.QuestAbandonV2Req);
        }
}

public bool QuestAbandonV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestAbandonV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestAbandonV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestAbandonV2Req, Common.QuestAbandonV2Req);
        }
}
public bool QuestAcceptV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestAcceptV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestAcceptV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestAcceptV2Req, Common.QuestAcceptV2Req);
        }
}

public bool QuestAcceptV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestAcceptV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestAcceptV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestAcceptV2Req, Common.QuestAcceptV2Req);
        }
}
public bool QuestCompleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestCompleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestCompleteV2Req, Common.QuestCompleteV2Req);
        }
}

public bool QuestCompleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestCompleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestCompleteV2Req, Common.QuestCompleteV2Req);
        }
}
public bool QuestConditionCompleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestConditionCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestConditionCompleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestConditionCompleteV2Req, Common.QuestConditionCompleteV2Req);
        }
}

public bool QuestConditionCompleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestConditionCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestConditionCompleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestConditionCompleteV2Req, Common.QuestConditionCompleteV2Req);
        }
}
public bool QuestListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestListV2Req, Common.QuestListV2Req);
        }
}

public bool QuestListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestListV2Req, Common.QuestListV2Req);
        }
}
public bool QuestPortalV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestPortalV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestPortalV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestPortalV2Req, Common.QuestPortalV2Req);
        }
}

public bool QuestPortalV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestPortalV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestPortalV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestPortalV2Req, Common.QuestPortalV2Req);
        }
}
public bool QuestRegisterV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestRegisterV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestRegisterV2Req, Common.QuestRegisterV2Req);
        }
}

public bool QuestRegisterV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestRegisterV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestRegisterV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestRegisterV2Req, Common.QuestRegisterV2Req);
        }
}
public bool QuestRerollV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestRerollV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestRerollV2Req, Common.QuestRerollV2Req);
        }
}

public bool QuestRerollV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestRerollV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestRerollV2Req, Common.QuestRerollV2Req);
        }
}
public bool QuestRewardV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestRewardV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestRewardV2Req, Common.QuestRewardV2Req);
        }
}

public bool QuestRewardV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestRewardV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestRewardV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestRewardV2Req, Common.QuestRewardV2Req);
        }
}
public bool QuestTalkCompleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.QuestTalkCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.QuestTalkCompleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_QuestTalkCompleteV2Req, Common.QuestTalkCompleteV2Req);
        }
}

public bool QuestTalkCompleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.QuestTalkCompleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.QuestTalkCompleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_QuestTalkCompleteV2Req, Common.QuestTalkCompleteV2Req);
        }
}
public bool TutorialSkipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TutorialSkipV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TutorialSkipV2Req, Common.TutorialSkipV2Req);
        }
}

public bool TutorialSkipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TutorialSkipV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TutorialSkipV2Req, Common.TutorialSkipV2Req);
        }
}
public bool GuildRelationReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GuildRelationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GuildRelationReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GuildRelationReq, Common.GuildRelationReq);
        }
}

public bool GuildRelationReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GuildRelationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GuildRelationReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GuildRelationReq, Common.GuildRelationReq);
        }
}
public bool PlayerRelationReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerRelationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerRelationReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerRelationReq, Common.PlayerRelationReq);
        }
}

public bool PlayerRelationReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerRelationReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerRelationReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerRelationReq, Common.PlayerRelationReq);
        }
}
public bool RideAttachDeleteV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachDeleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachDeleteV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachDeleteV2Req, Common.RideAttachDeleteV2Req);
        }
}

public bool RideAttachDeleteV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachDeleteV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachDeleteV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachDeleteV2Req, Common.RideAttachDeleteV2Req);
        }
}
public bool RideAttachDisassembleV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachDisassembleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachDisassembleV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachDisassembleV2Req, Common.RideAttachDisassembleV2Req);
        }
}

public bool RideAttachDisassembleV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachDisassembleV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachDisassembleV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachDisassembleV2Req, Common.RideAttachDisassembleV2Req);
        }
}
public bool RideAttachEquipOffV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachEquipOffV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachEquipOffV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachEquipOffV2Req, Common.RideAttachEquipOffV2Req);
        }
}

public bool RideAttachEquipOffV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachEquipOffV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachEquipOffV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachEquipOffV2Req, Common.RideAttachEquipOffV2Req);
        }
}
public bool RideAttachEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachEquipV2Req, Common.RideAttachEquipV2Req);
        }
}

public bool RideAttachEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachEquipV2Req, Common.RideAttachEquipV2Req);
        }
}
public bool RideAttachGachaV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachGachaV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachGachaV2Req, Common.RideAttachGachaV2Req);
        }
}

public bool RideAttachGachaV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachGachaV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachGachaV2Req, Common.RideAttachGachaV2Req);
        }
}
public bool RideAttachInvenExtendV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachInvenExtendV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideAttachInvenExtendV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideAttachInvenExtendV2Req, Common.RideAttachInvenExtendV2Req);
        }
}

public bool RideAttachInvenExtendV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideAttachInvenExtendV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideAttachInvenExtendV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideAttachInvenExtendV2Req, Common.RideAttachInvenExtendV2Req);
        }
}
public bool RideEquipOffV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideEquipOffV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideEquipOffV2Req, Common.RideEquipOffV2Req);
        }
}

public bool RideEquipOffV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideEquipOffV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideEquipOffV2Req, Common.RideEquipOffV2Req);
        }
}
public bool RideEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideEquipV2Req, Common.RideEquipV2Req);
        }
}

public bool RideEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideEquipV2Req, Common.RideEquipV2Req);
        }
}
public bool RideGachaV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideGachaV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideGachaV2Req, Common.RideGachaV2Req);
        }
}

public bool RideGachaV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideGachaV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideGachaV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideGachaV2Req, Common.RideGachaV2Req);
        }
}
public bool RideMixV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RideMixV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideMixV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideMixV2Req, Common.RideMixV2Req);
        }
}

public bool RideMixV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RideMixV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideMixV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideMixV2Req, Common.RideMixV2Req);
        }
}
public bool RideSitOffV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideSitOffV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideSitOffV2Req, Common.RideSitOffV2Req);
        }
}

public bool RideSitOffV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideSitOffV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideSitOffV2Req, Common.RideSitOffV2Req);
        }
}
public bool RideSitV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RideSitV2Req;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RideSitV2Req, Common.RideSitV2Req);
        }
}

public bool RideSitV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RideSitV2Req;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RideSitV2Req, Common.RideSitV2Req);
        }
}
public bool BuyCashShopItemV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BuyCashShopItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BuyCashShopItemV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BuyCashShopItemV2Req, Common.BuyCashShopItemV2Req);
        }
}

public bool BuyCashShopItemV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BuyCashShopItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BuyCashShopItemV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BuyCashShopItemV2Req, Common.BuyCashShopItemV2Req);
        }
}
public bool BuyGameShopItemV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BuyGameShopItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BuyGameShopItemV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BuyGameShopItemV2Req, Common.BuyGameShopItemV2Req);
        }
}

public bool BuyGameShopItemV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BuyGameShopItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BuyGameShopItemV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BuyGameShopItemV2Req, Common.BuyGameShopItemV2Req);
        }
}
public bool GameShopSellItemV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GameShopSellItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GameShopSellItemV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GameShopSellItemV2Req, Common.GameShopSellItemV2Req);
        }
}

public bool GameShopSellItemV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GameShopSellItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GameShopSellItemV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GameShopSellItemV2Req, Common.GameShopSellItemV2Req);
        }
}
public bool ChangeSiegeModeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ChangeSiegeModeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ChangeSiegeModeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ChangeSiegeModeV2Req, Common.ChangeSiegeModeV2Req);
        }
}

public bool ChangeSiegeModeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ChangeSiegeModeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ChangeSiegeModeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ChangeSiegeModeV2Req, Common.ChangeSiegeModeV2Req);
        }
}
public bool ChoiceSiegeWarFactionV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ChoiceSiegeWarFactionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ChoiceSiegeWarFactionV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ChoiceSiegeWarFactionV2Req, Common.ChoiceSiegeWarFactionV2Req);
        }
}

public bool ChoiceSiegeWarFactionV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ChoiceSiegeWarFactionV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ChoiceSiegeWarFactionV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ChoiceSiegeWarFactionV2Req, Common.ChoiceSiegeWarFactionV2Req);
        }
}
public bool GetSiegeWarInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GetSiegeWarInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GetSiegeWarInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GetSiegeWarInfoV2Req, Common.GetSiegeWarInfoV2Req);
        }
}

public bool GetSiegeWarInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GetSiegeWarInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GetSiegeWarInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GetSiegeWarInfoV2Req, Common.GetSiegeWarInfoV2Req);
        }
}
public bool GetSiegeWarMatchInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.GetSiegeWarMatchInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GetSiegeWarMatchInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GetSiegeWarMatchInfoV2Req, Common.GetSiegeWarMatchInfoV2Req);
        }
}

public bool GetSiegeWarMatchInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.GetSiegeWarMatchInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GetSiegeWarMatchInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GetSiegeWarMatchInfoV2Req, Common.GetSiegeWarMatchInfoV2Req);
        }
}
public bool BuffListInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BuffListInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BuffListInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BuffListInfoV2Req, Common.BuffListInfoV2Req);
        }
}

public bool BuffListInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BuffListInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BuffListInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BuffListInfoV2Req, Common.BuffListInfoV2Req);
        }
}
public bool SkillChangeAutoUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillChangeAutoUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillChangeAutoUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillChangeAutoUseV2Req, Common.SkillChangeAutoUseV2Req);
        }
}

public bool SkillChangeAutoUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillChangeAutoUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillChangeAutoUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillChangeAutoUseV2Req, Common.SkillChangeAutoUseV2Req);
        }
}
public bool SkillChangePresetV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillChangePresetV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillChangePresetV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillChangePresetV2Req, Common.SkillChangePresetV2Req);
        }
}

public bool SkillChangePresetV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillChangePresetV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillChangePresetV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillChangePresetV2Req, Common.SkillChangePresetV2Req);
        }
}
public bool SkillEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillEquipV2Req, Common.SkillEquipV2Req);
        }
}

public bool SkillEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillEquipV2Req, Common.SkillEquipV2Req);
        }
}
public bool SkillHitV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillHitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillHitV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillHitV2Req, Common.SkillHitV2Req);
        }
}

public bool SkillHitV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillHitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillHitV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillHitV2Req, Common.SkillHitV2Req);
        }
}
public bool SkillLearnV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillLearnV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillLearnV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillLearnV2Req, Common.SkillLearnV2Req);
        }
}

public bool SkillLearnV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillLearnV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillLearnV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillLearnV2Req, Common.SkillLearnV2Req);
        }
}
public bool SkillLevelUpV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillLevelUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillLevelUpV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillLevelUpV2Req, Common.SkillLevelUpV2Req);
        }
}

public bool SkillLevelUpV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillLevelUpV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillLevelUpV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillLevelUpV2Req, Common.SkillLevelUpV2Req);
        }
}
public bool SkillListInfoV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillListInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillListInfoV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillListInfoV2Req, Common.SkillListInfoV2Req);
        }
}

public bool SkillListInfoV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillListInfoV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillListInfoV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillListInfoV2Req, Common.SkillListInfoV2Req);
        }
}
public bool SkillUnEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillUnEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillUnEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillUnEquipV2Req, Common.SkillUnEquipV2Req);
        }
}

public bool SkillUnEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillUnEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillUnEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillUnEquipV2Req, Common.SkillUnEquipV2Req);
        }
}
public bool SkillUpgradeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillUpgradeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillUpgradeV2Req, Common.SkillUpgradeV2Req);
        }
}

public bool SkillUpgradeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillUpgradeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillUpgradeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillUpgradeV2Req, Common.SkillUpgradeV2Req);
        }
}
public bool SkillUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.SkillUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SkillUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SkillUseV2Req, Common.SkillUseV2Req);
        }
}

public bool SkillUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.SkillUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SkillUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SkillUseV2Req, Common.SkillUseV2Req);
        }
}
public bool RTTSkillUseV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RTTSkillUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RTTSkillUseV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RTTSkillUseV2Req, Common.RTTSkillUseV2Req);
        }
}

public bool RTTSkillUseV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RTTSkillUseV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RTTSkillUseV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RTTSkillUseV2Req, Common.RTTSkillUseV2Req);
        }
}
public bool RTTSkillHitV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.RTTSkillHitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RTTSkillHitV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RTTSkillHitV2Req, Common.RTTSkillHitV2Req);
        }
}

public bool RTTSkillHitV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.RTTSkillHitV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RTTSkillHitV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RTTSkillHitV2Req, Common.RTTSkillHitV2Req);
        }
}
public bool PlayerTitleChangeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.PlayerTitleChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.PlayerTitleChangeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_PlayerTitleChangeV2Req, Common.PlayerTitleChangeV2Req);
        }
}

public bool PlayerTitleChangeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.PlayerTitleChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.PlayerTitleChangeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_PlayerTitleChangeV2Req, Common.PlayerTitleChangeV2Req);
        }
}
public bool TitleChangeV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TitleChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TitleChangeV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TitleChangeV2Req, Common.TitleChangeV2Req);
        }
}

public bool TitleChangeV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TitleChangeV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TitleChangeV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TitleChangeV2Req, Common.TitleChangeV2Req);
        }
}
public bool TitleListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TitleListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TitleListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TitleListV2Req, Common.TitleListV2Req);
        }
}

public bool TitleListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TitleListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TitleListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TitleListV2Req, Common.TitleListV2Req);
        }
}
public bool TradeCronAverageBalanceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronAverageBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronAverageBalanceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronAverageBalanceReq, Common.TradeCronAverageBalanceReq);
        }
}

public bool TradeCronAverageBalanceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronAverageBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronAverageBalanceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronAverageBalanceReq, Common.TradeCronAverageBalanceReq);
        }
}
public bool TradeCronBalanceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronBalanceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronBalanceReq, Common.TradeCronBalanceReq);
        }
}

public bool TradeCronBalanceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronBalanceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronBalanceReq, Common.TradeCronBalanceReq);
        }
}
public bool TradeCronBuyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronBuyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronBuyReq, Common.TradeCronBuyReq);
        }
}

public bool TradeCronBuyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronBuyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronBuyReq, Common.TradeCronBuyReq);
        }
}
public bool TradeCronInfoReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronInfoReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronInfoReq, Common.TradeCronInfoReq);
        }
}

public bool TradeCronInfoReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronInfoReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronInfoReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronInfoReq, Common.TradeCronInfoReq);
        }
}
public bool TradeCronListReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronListReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronListReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronListReq, Common.TradeCronListReq);
        }
}

public bool TradeCronListReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronListReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronListReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronListReq, Common.TradeCronListReq);
        }
}
public bool TradeCronPreviousDayBalanceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronPreviousDayBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronPreviousDayBalanceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronPreviousDayBalanceReq, Common.TradeCronPreviousDayBalanceReq);
        }
}

public bool TradeCronPreviousDayBalanceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronPreviousDayBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronPreviousDayBalanceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronPreviousDayBalanceReq, Common.TradeCronPreviousDayBalanceReq);
        }
}
public bool TradeCronSellReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronSellReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronSellReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronSellReq, Common.TradeCronSellReq);
        }
}

public bool TradeCronSellReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronSellReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronSellReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronSellReq, Common.TradeCronSellReq);
        }
}
public bool TradeCronWeeklyBalanceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronWeeklyBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronWeeklyBalanceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronWeeklyBalanceReq, Common.TradeCronWeeklyBalanceReq);
        }
}

public bool TradeCronWeeklyBalanceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronWeeklyBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronWeeklyBalanceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronWeeklyBalanceReq, Common.TradeCronWeeklyBalanceReq);
        }
}
public bool TradePersonalRequestReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalRequestReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalRequestReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalRequestReq, Common.TradePersonalRequestReq);
        }
}

public bool TradePersonalRequestReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalRequestReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalRequestReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalRequestReq, Common.TradePersonalRequestReq);
        }
}
public bool TradePersonalAcceptReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalAcceptReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalAcceptReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalAcceptReq, Common.TradePersonalAcceptReq);
        }
}

public bool TradePersonalAcceptReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalAcceptReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalAcceptReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalAcceptReq, Common.TradePersonalAcceptReq);
        }
}
public bool TradePersonalRefuseReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalRefuseReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalRefuseReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalRefuseReq, Common.TradePersonalRefuseReq);
        }
}

public bool TradePersonalRefuseReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalRefuseReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalRefuseReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalRefuseReq, Common.TradePersonalRefuseReq);
        }
}
public bool TradePersonalCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalCancelReq, Common.TradePersonalCancelReq);
        }
}

public bool TradePersonalCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalCancelReq, Common.TradePersonalCancelReq);
        }
}
public bool TradePersonalWithdrawReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalWithdrawReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalWithdrawReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalWithdrawReq, Common.TradePersonalWithdrawReq);
        }
}

public bool TradePersonalWithdrawReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalWithdrawReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalWithdrawReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalWithdrawReq, Common.TradePersonalWithdrawReq);
        }
}
public bool TradePersonalFinishReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalFinishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalFinishReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalFinishReq, Common.TradePersonalFinishReq);
        }
}

public bool TradePersonalFinishReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalFinishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalFinishReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalFinishReq, Common.TradePersonalFinishReq);
        }
}
public bool TradePersonalHistoryReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalHistoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradePersonalHistoryReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradePersonalHistoryReq, Common.TradePersonalHistoryReq);
        }
}

public bool TradePersonalHistoryReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradePersonalHistoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradePersonalHistoryReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradePersonalHistoryReq, Common.TradePersonalHistoryReq);
        }
}
public bool TradeCronMyListReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronMyListReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronMyListReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronMyListReq, Common.TradeCronMyListReq);
        }
}

public bool TradeCronMyListReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronMyListReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronMyListReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronMyListReq, Common.TradeCronMyListReq);
        }
}
public bool TradeCronSettleReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronSettleReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronSettleReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronSettleReq, Common.TradeCronSettleReq);
        }
}

public bool TradeCronSettleReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronSettleReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronSettleReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronSettleReq, Common.TradeCronSettleReq);
        }
}
public bool TradeCronTradesReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronTradesReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronTradesReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronTradesReq, Common.TradeCronTradesReq);
        }
}

public bool TradeCronTradesReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronTradesReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronTradesReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronTradesReq, Common.TradeCronTradesReq);
        }
}
public bool TradeCronTimeToNextChangeBalanceReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronTimeToNextChangeBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronTimeToNextChangeBalanceReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronTimeToNextChangeBalanceReq, Common.TradeCronTimeToNextChangeBalanceReq);
        }
}

public bool TradeCronTimeToNextChangeBalanceReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronTimeToNextChangeBalanceReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronTimeToNextChangeBalanceReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronTimeToNextChangeBalanceReq, Common.TradeCronTimeToNextChangeBalanceReq);
        }
}
public bool TradeCronCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronCancelReq, Common.TradeCronCancelReq);
        }
}

public bool TradeCronCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronCancelReq, Common.TradeCronCancelReq);
        }
}
public bool TradeCronReclaimExpiredReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronReclaimExpiredReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronReclaimExpiredReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronReclaimExpiredReq, Common.TradeCronReclaimExpiredReq);
        }
}

public bool TradeCronReclaimExpiredReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronReclaimExpiredReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronReclaimExpiredReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronReclaimExpiredReq, Common.TradeCronReclaimExpiredReq);
        }
}
public bool TradeCronRemainingCanceledPenaltyTimeReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronRemainingCanceledPenaltyTimeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeCronRemainingCanceledPenaltyTimeReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeCronRemainingCanceledPenaltyTimeReq, Common.TradeCronRemainingCanceledPenaltyTimeReq);
        }
}

public bool TradeCronRemainingCanceledPenaltyTimeReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeCronRemainingCanceledPenaltyTimeReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeCronRemainingCanceledPenaltyTimeReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeCronRemainingCanceledPenaltyTimeReq, Common.TradeCronRemainingCanceledPenaltyTimeReq);
        }
}
public bool TradeItemRegistReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemRegistReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemRegistReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemRegistReq, Common.TradeItemRegistReq);
        }
}

public bool TradeItemRegistReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemRegistReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemRegistReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemRegistReq, Common.TradeItemRegistReq);
        }
}
public bool TradeItemCancelReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemCancelReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemCancelReq, Common.TradeItemCancelReq);
        }
}

public bool TradeItemCancelReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemCancelReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemCancelReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemCancelReq, Common.TradeItemCancelReq);
        }
}
public bool TradeItemBuyReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemBuyReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemBuyReq, Common.TradeItemBuyReq);
        }
}

public bool TradeItemBuyReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBuyReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemBuyReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemBuyReq, Common.TradeItemBuyReq);
        }
}
public bool TradeItemWithdrawReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemWithdrawReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemWithdrawReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemWithdrawReq, Common.TradeItemWithdrawReq);
        }
}

public bool TradeItemWithdrawReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemWithdrawReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemWithdrawReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemWithdrawReq, Common.TradeItemWithdrawReq);
        }
}
public bool TradeItemFinishReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemFinishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemFinishReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemFinishReq, Common.TradeItemFinishReq);
        }
}

public bool TradeItemFinishReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemFinishReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemFinishReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemFinishReq, Common.TradeItemFinishReq);
        }
}
public bool TradeItemHistoryReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemHistoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemHistoryReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemHistoryReq, Common.TradeItemHistoryReq);
        }
}

public bool TradeItemHistoryReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemHistoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemHistoryReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemHistoryReq, Common.TradeItemHistoryReq);
        }
}
public bool TradeItemSearchCategoryReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemSearchCategoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemSearchCategoryReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemSearchCategoryReq, Common.TradeItemSearchCategoryReq);
        }
}

public bool TradeItemSearchCategoryReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemSearchCategoryReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemSearchCategoryReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemSearchCategoryReq, Common.TradeItemSearchCategoryReq);
        }
}
public bool TradeItemSearchItemIndexReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemSearchItemIndexReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemSearchItemIndexReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemSearchItemIndexReq, Common.TradeItemSearchItemIndexReq);
        }
}

public bool TradeItemSearchItemIndexReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemSearchItemIndexReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemSearchItemIndexReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemSearchItemIndexReq, Common.TradeItemSearchItemIndexReq);
        }
}
public bool TradeItemBookmarkAddReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBookmarkAddReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemBookmarkAddReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemBookmarkAddReq, Common.TradeItemBookmarkAddReq);
        }
}

public bool TradeItemBookmarkAddReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBookmarkAddReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemBookmarkAddReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemBookmarkAddReq, Common.TradeItemBookmarkAddReq);
        }
}
public bool TradeItemBookmarkDeleteReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBookmarkDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TradeItemBookmarkDeleteReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TradeItemBookmarkDeleteReq, Common.TradeItemBookmarkDeleteReq);
        }
}

public bool TradeItemBookmarkDeleteReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.TradeItemBookmarkDeleteReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TradeItemBookmarkDeleteReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TradeItemBookmarkDeleteReq, Common.TradeItemBookmarkDeleteReq);
        }
}
public bool WeaponAppearanceCollectListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceCollectListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceCollectListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceCollectListV2Req, Common.WeaponAppearanceCollectListV2Req);
        }
}

public bool WeaponAppearanceCollectListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceCollectListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceCollectListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceCollectListV2Req, Common.WeaponAppearanceCollectListV2Req);
        }
}
public bool WeaponAppearanceEquipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceEquipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceEquipV2Req, Common.WeaponAppearanceEquipV2Req);
        }
}

public bool WeaponAppearanceEquipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceEquipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceEquipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceEquipV2Req, Common.WeaponAppearanceEquipV2Req);
        }
}
public bool WeaponAppearanceExtractFromItemV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceExtractFromItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceExtractFromItemV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceExtractFromItemV2Req, Common.WeaponAppearanceExtractFromItemV2Req);
        }
}

public bool WeaponAppearanceExtractFromItemV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceExtractFromItemV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceExtractFromItemV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceExtractFromItemV2Req, Common.WeaponAppearanceExtractFromItemV2Req);
        }
}
public bool WeaponAppearanceHiddenV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceHiddenV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceHiddenV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceHiddenV2Req, Common.WeaponAppearanceHiddenV2Req);
        }
}

public bool WeaponAppearanceHiddenV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceHiddenV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceHiddenV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceHiddenV2Req, Common.WeaponAppearanceHiddenV2Req);
        }
}
public bool WeaponAppearanceListV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceListV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceListV2Req, Common.WeaponAppearanceListV2Req);
        }
}

public bool WeaponAppearanceListV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceListV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceListV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceListV2Req, Common.WeaponAppearanceListV2Req);
        }
}
public bool WeaponAppearanceUnequipV2Req(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceUnequipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceUnequipV2Req;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_WeaponAppearanceUnequipV2Req, Common.WeaponAppearanceUnequipV2Req);
        }
}

public bool WeaponAppearanceUnequipV2Req(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.WeaponAppearanceUnequipV2Req packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.WeaponAppearanceUnequipV2Req;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_WeaponAppearanceUnequipV2Req, Common.WeaponAppearanceUnequipV2Req);
        }
}
public bool AccountCreateNameReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.AccountCreateNameReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AccountCreateNameReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AccountCreateNameReq, Common.AccountCreateNameReq);
        }
}

public bool AccountCreateNameReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.AccountCreateNameReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AccountCreateNameReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AccountCreateNameReq, Common.AccountCreateNameReq);
        }
}
public bool ZoneStatusReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.ZoneStatusReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ZoneStatusReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ZoneStatusReq, Common.ZoneStatusReq);
        }
}

public bool ZoneStatusReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.ZoneStatusReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ZoneStatusReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ZoneStatusReq, Common.ZoneStatusReq);
        }
}
public bool BloodFogEnterReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogEnterReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BloodFogEnterReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BloodFogEnterReq, Common.BloodFogEnterReq);
        }
}

public bool BloodFogEnterReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogEnterReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BloodFogEnterReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BloodFogEnterReq, Common.BloodFogEnterReq);
        }
}
public bool BloodFogLeaveReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogLeaveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BloodFogLeaveReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BloodFogLeaveReq, Common.BloodFogLeaveReq);
        }
}

public bool BloodFogLeaveReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogLeaveReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BloodFogLeaveReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BloodFogLeaveReq, Common.BloodFogLeaveReq);
        }
}
public bool BloodFogUseBuffReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogUseBuffReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.BloodFogUseBuffReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_BloodFogUseBuffReq, Common.BloodFogUseBuffReq);
        }
}

public bool BloodFogUseBuffReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.BloodFogUseBuffReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.BloodFogUseBuffReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_BloodFogUseBuffReq, Common.BloodFogUseBuffReq);
        }
}
public bool C2SRttReq(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.C2SRttReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.C2SRttReq;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_C2SRttReq, Common.C2SRttReq);
        }
}

public bool C2SRttReq(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.C2SRttReq packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.C2SRttReq;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_C2SRttReq, Common.C2SRttReq);
        }
}
public bool C2SRttRes(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, C2G.C2SRttRes packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
		{
		Nettention.Proud.Message __msg=freeList.GetObject();
		__msg.Clear();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.C2SRttRes;
		__msg.Write(__msgid);
		NetMarshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_C2SRttRes, Common.C2SRttRes);
        }
}

public bool C2SRttRes(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, C2G.C2SRttRes packet)
{
	using (Nettention.Proud.FreeListPopper<Nettention.Proud.Message> freeList = new Nettention.Proud.FreeListPopper<Nettention.Proud.Message>())
{
Nettention.Proud.Message __msg=freeList.GetObject();
__msg.Clear();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.C2SRttRes;
__msg.Write(__msgid);
NetMarshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_C2SRttRes, Common.C2SRttRes);
        }
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_PlayerSelectReq="PlayerSelectReq";
public const string RmiName_PlayerEnterStageFirstReq="PlayerEnterStageFirstReq";
public const string RmiName_PlayerEnterStageSecondReq="PlayerEnterStageSecondReq";
public const string RmiName_PlayerEnterStageThirdReq="PlayerEnterStageThirdReq";
public const string RmiName_PlayerEnterStageFourthReq="PlayerEnterStageFourthReq";
public const string RmiName_PlayerEnterStageFifthReq="PlayerEnterStageFifthReq";
public const string RmiName_PlayerGameEnterReq="PlayerGameEnterReq";
public const string RmiName_AuthenticateBotCredentialReq="AuthenticateBotCredentialReq";
public const string RmiName_DesignateBindStoneReq="DesignateBindStoneReq";
public const string RmiName_PortalByBindStoneReq="PortalByBindStoneReq";
public const string RmiName_PlayerBlackRosterGetPreferenceReq="PlayerBlackRosterGetPreferenceReq";
public const string RmiName_PlayerBlackRosterObservingReq="PlayerBlackRosterObservingReq";
public const string RmiName_PlayerBlackRosterProvocationReq="PlayerBlackRosterProvocationReq";
public const string RmiName_PlayerBlackRosterRankReq="PlayerBlackRosterRankReq";
public const string RmiName_PlayerBlackRosterRevengeReq="PlayerBlackRosterRevengeReq";
public const string RmiName_PlayerBlackRosterSetPreferenceReq="PlayerBlackRosterSetPreferenceReq";
public const string RmiName_PlayerBlackRostersReq="PlayerBlackRostersReq";
public const string RmiName_PlayerBlackRosterLastWeekRankReq="PlayerBlackRosterLastWeekRankReq";
public const string RmiName_CheatMessageV2Req="CheatMessageV2Req";
public const string RmiName_AccountBlockPlayerAddReq="AccountBlockPlayerAddReq";
public const string RmiName_AccountBlockPlayerDeleteReq="AccountBlockPlayerDeleteReq";
public const string RmiName_AccountBlockPlayerReasonEditReq="AccountBlockPlayerReasonEditReq";
public const string RmiName_AccountBlockPlayersReq="AccountBlockPlayersReq";
public const string RmiName_ChatMessageV2Req="ChatMessageV2Req";
public const string RmiName_PlayerSearchV2Req="PlayerSearchV2Req";
public const string RmiName_LinkItemInfoReq="LinkItemInfoReq";
public const string RmiName_CostumeCardBuildReq="CostumeCardBuildReq";
public const string RmiName_CostumeCardGachaReq="CostumeCardGachaReq";
public const string RmiName_CostumeCardInfoReq="CostumeCardInfoReq";
public const string RmiName_CostumeCardMixReq="CostumeCardMixReq";
public const string RmiName_CostumeCollectReq="CostumeCollectReq";
public const string RmiName_CostumeEquipBodyReq="CostumeEquipBodyReq";
public const string RmiName_CostumeEquipBodyShowReq="CostumeEquipBodyShowReq";
public const string RmiName_CostumeEquipHeadReq="CostumeEquipHeadReq";
public const string RmiName_CostumeEquipHeadShowReq="CostumeEquipHeadShowReq";
public const string RmiName_CostumeInfoReq="CostumeInfoReq";
public const string RmiName_CostumeConfirmAcceptReq="CostumeConfirmAcceptReq";
public const string RmiName_CostumeConfirmChangeReq="CostumeConfirmChangeReq";
public const string RmiName_CostumeConfirmInfoReq="CostumeConfirmInfoReq";
public const string RmiName_PortalEffectReq="PortalEffectReq";
public const string RmiName_AttainmentDailyRewardV2Req="AttainmentDailyRewardV2Req";
public const string RmiName_AttainmentNormalRewardV2Req="AttainmentNormalRewardV2Req";
public const string RmiName_AttendanceRewardV2Req="AttendanceRewardV2Req";
public const string RmiName_BossScheduleReq="BossScheduleReq";
public const string RmiName_EventExchangeRewardV2Req="EventExchangeRewardV2Req";
public const string RmiName_GuildAdminBuffActiveReq="GuildAdminBuffActiveReq";
public const string RmiName_GuildAdminBuffBuyReq="GuildAdminBuffBuyReq";
public const string RmiName_GuildAdminInfoReq="GuildAdminInfoReq";
public const string RmiName_GuildAdminLevelUpReq="GuildAdminLevelUpReq";
public const string RmiName_GuildAdminMasterChangeReq="GuildAdminMasterChangeReq";
public const string RmiName_GuildAdminMemberBanishReq="GuildAdminMemberBanishReq";
public const string RmiName_GuildAdminMemberUpdateReq="GuildAdminMemberUpdateReq";
public const string RmiName_GuildAdminUpdateBaseReq="GuildAdminUpdateBaseReq";
public const string RmiName_GuildAdminUpdateIntroReq="GuildAdminUpdateIntroReq";
public const string RmiName_GuildAdminUpdateNoticeReq="GuildAdminUpdateNoticeReq";
public const string RmiName_GuildAdminUpdateTendencyReq="GuildAdminUpdateTendencyReq";
public const string RmiName_GuildAdminUpdateTypeReq="GuildAdminUpdateTypeReq";
public const string RmiName_GuildAttendReq="GuildAttendReq";
public const string RmiName_GuildBuffInfoReq="GuildBuffInfoReq";
public const string RmiName_GuildCreateReq="GuildCreateReq";
public const string RmiName_GuildDeleteReq="GuildDeleteReq";
public const string RmiName_GuildDonateReq="GuildDonateReq";
public const string RmiName_GuildDonationByCronV2Req="GuildDonationByCronV2Req";
public const string RmiName_GuildFindReq="GuildFindReq";
public const string RmiName_GuildHistroyReq="GuildHistroyReq";
public const string RmiName_GuildInfoCallReq="GuildInfoCallReq";
public const string RmiName_GuildInfoReq="GuildInfoReq";
public const string RmiName_GuildJoinRequestConfirmReq="GuildJoinRequestConfirmReq";
public const string RmiName_GuildJoinRequestListReq="GuildJoinRequestListReq";
public const string RmiName_GuildLeaveReq="GuildLeaveReq";
public const string RmiName_GuildLiveInviteConfirmReq="GuildLiveInviteConfirmReq";
public const string RmiName_GuildLiveInviteReq="GuildLiveInviteReq";
public const string RmiName_GuildMemberInfoReq="GuildMemberInfoReq";
public const string RmiName_GuildSignRequestCancelReq="GuildSignRequestCancelReq";
public const string RmiName_GuildSignRequestListReq="GuildSignRequestListReq";
public const string RmiName_GuildSignRequestReq="GuildSignRequestReq";
public const string RmiName_GuildVoteInfoReq="GuildVoteInfoReq";
public const string RmiName_GuildVoteMasterImpeachReq="GuildVoteMasterImpeachReq";
public const string RmiName_GuildVoteReq="GuildVoteReq";
public const string RmiName_GuildWaitingMemberListV2Req="GuildWaitingMemberListV2Req";
public const string RmiName_GuildWarehouseChangeSizeV2Req="GuildWarehouseChangeSizeV2Req";
public const string RmiName_GuildWarehouseInfoV2Req="GuildWarehouseInfoV2Req";
public const string RmiName_GuildWarehouseItemMoveV2Req="GuildWarehouseItemMoveV2Req";
public const string RmiName_GuildWarehouseWalletMoveV2Req="GuildWarehouseWalletMoveV2Req";
public const string RmiName_GuildTerritoryInfoReq="GuildTerritoryInfoReq";
public const string RmiName_GuildTerritorySetReq="GuildTerritorySetReq";
public const string RmiName_WorldTerritoryOverviewReq="WorldTerritoryOverviewReq";
public const string RmiName_DungeonEnterV2Req="DungeonEnterV2Req";
public const string RmiName_DungeonGiveUpV2Req="DungeonGiveUpV2Req";
public const string RmiName_DungeonLeaveV2Req="DungeonLeaveV2Req";
public const string RmiName_DungeonLoadingCompleteV2Req="DungeonLoadingCompleteV2Req";
public const string RmiName_InteractStartReq="InteractStartReq";
public const string RmiName_InteractEndReq="InteractEndReq";
public const string RmiName_InteractCancelReq="InteractCancelReq";
public const string RmiName_EquipmentVisibleV2Req="EquipmentVisibleV2Req";
public const string RmiName_InventoryChangeSizeV2Req="InventoryChangeSizeV2Req";
public const string RmiName_ItemAddOptionV2Req="ItemAddOptionV2Req";
public const string RmiName_ItemChangeOptionV2Req="ItemChangeOptionV2Req";
public const string RmiName_ItemCollectionBookmarksRegisterV2Req="ItemCollectionBookmarksRegisterV2Req";
public const string RmiName_ItemCollectionBookmarksUnregisterV2Req="ItemCollectionBookmarksUnregisterV2Req";
public const string RmiName_ItemCollectionRegisterV2Req="ItemCollectionRegisterV2Req";
public const string RmiName_ItemCombineV2Req="ItemCombineV2Req";
public const string RmiName_ItemDeleteV2Req="ItemDeleteV2Req";
public const string RmiName_ItemDisassembleV2Req="ItemDisassembleV2Req";
public const string RmiName_ItemEnchantV2Req="ItemEnchantV2Req";
public const string RmiName_ItemEquipV2Req="ItemEquipV2Req";
public const string RmiName_ItemIntensionV2Req="ItemIntensionV2Req";
public const string RmiName_ItemMixOptionV2Req="ItemMixOptionV2Req";
public const string RmiName_ItemPackageUseV2Req="ItemPackageUseV2Req";
public const string RmiName_ItemProductionV2Req="ItemProductionV2Req";
public const string RmiName_ItemSelectUseV2Req="ItemSelectUseV2Req";
public const string RmiName_ItemUpgradeV2Req="ItemUpgradeV2Req";
public const string RmiName_ItemUseV2Req="ItemUseV2Req";
public const string RmiName_PkLootingItemV2Req="PkLootingItemV2Req";
public const string RmiName_PkLootingListV2Req="PkLootingListV2Req";
public const string RmiName_WarehouseChangeSizeV2Req="WarehouseChangeSizeV2Req";
public const string RmiName_WarehouseInfoV2Req="WarehouseInfoV2Req";
public const string RmiName_WarehouseItemMoveV2Req="WarehouseItemMoveV2Req";
public const string RmiName_ItemSetLockReq="ItemSetLockReq";
public const string RmiName_ItemMarketPriceReq="ItemMarketPriceReq";
public const string RmiName_ItemInheritReq="ItemInheritReq";
public const string RmiName_MailListV2Req="MailListV2Req";
public const string RmiName_MailReadAllV2Req="MailReadAllV2Req";
public const string RmiName_MailReadV2Req="MailReadV2Req";
public const string RmiName_MatchingApplyReq="MatchingApplyReq";
public const string RmiName_MatchingCancelReq="MatchingCancelReq";
public const string RmiName_MatchingReplyReq="MatchingReplyReq";
public const string RmiName_AuthenticatePlayerCredentialReq="AuthenticatePlayerCredentialReq";
public const string RmiName_BroadCastContextReq="BroadCastContextReq";
public const string RmiName_CutSceneEndV2Req="CutSceneEndV2Req";
public const string RmiName_CutSceneStartV2Req="CutSceneStartV2Req";
public const string RmiName_LogOutReq="LogOutReq";
public const string RmiName_PortalV2Req="PortalV2Req";
public const string RmiName_ReturnToLobbyReq="ReturnToLobbyReq";
public const string RmiName_ServerTimeV2Req="ServerTimeV2Req";
public const string RmiName_TestPacketV2Req="TestPacketV2Req";
public const string RmiName_TriggerActivateV2Req="TriggerActivateV2Req";
public const string RmiName_UnionV2Req="UnionV2Req";
public const string RmiName_ZoneLoadingCompletedReq="ZoneLoadingCompletedReq";
public const string RmiName_BossDamagedInfoReq="BossDamagedInfoReq";
public const string RmiName_PartyChangeLootingReq="PartyChangeLootingReq";
public const string RmiName_PartyCreateReq="PartyCreateReq";
public const string RmiName_PartyDisbandReq="PartyDisbandReq";
public const string RmiName_PartyDungeonEntranceInquiryReq="PartyDungeonEntranceInquiryReq";
public const string RmiName_PartyEnterDungeonReplyReq="PartyEnterDungeonReplyReq";
public const string RmiName_PartyEnterDungeonReq="PartyEnterDungeonReq";
public const string RmiName_PartyInfoReq="PartyInfoReq";
public const string RmiName_PartyInviteReplyReq="PartyInviteReplyReq";
public const string RmiName_PartyInviteReq="PartyInviteReq";
public const string RmiName_PartyLeaderChangeReq="PartyLeaderChangeReq";
public const string RmiName_PartyLeaveReq="PartyLeaveReq";
public const string RmiName_PartyMemberKickReq="PartyMemberKickReq";
public const string RmiName_PartySuggestionPlayersReq="PartySuggestionPlayersReq";
public const string RmiName_PartyEnterDungeonCanceledReq="PartyEnterDungeonCanceledReq";
public const string RmiName_PetCollectInfoV2Req="PetCollectInfoV2Req";
public const string RmiName_PetEquipOffV2Req="PetEquipOffV2Req";
public const string RmiName_PetEquipV2Req="PetEquipV2Req";
public const string RmiName_PetFeedUseV2Req="PetFeedUseV2Req";
public const string RmiName_PetGachaV2Req="PetGachaV2Req";
public const string RmiName_PetInfoV2Req="PetInfoV2Req";
public const string RmiName_PetMixV2Req="PetMixV2Req";
public const string RmiName_PetUpgradeV2Req="PetUpgradeV2Req";
public const string RmiName_PetInActiveBuffReq="PetInActiveBuffReq";
public const string RmiName_PhaseFieldEndV2Req="PhaseFieldEndV2Req";
public const string RmiName_PhaseFieldStartV2Req="PhaseFieldStartV2Req";
public const string RmiName_PlayerDeleteReq="PlayerDeleteReq";
public const string RmiName_PlayerGetMacroReq="PlayerGetMacroReq";
public const string RmiName_PlayerMapMoveV2Req="PlayerMapMoveV2Req";
public const string RmiName_PlayerMoveV2Req="PlayerMoveV2Req";
public const string RmiName_PlayerMoveZoneV2Req="PlayerMoveZoneV2Req";
public const string RmiName_PlayerResurrectionV2Req="PlayerResurrectionV2Req";
public const string RmiName_PlayerSetMacroReq="PlayerSetMacroReq";
public const string RmiName_PlayerSlotChangeV2Req="PlayerSlotChangeV2Req";
public const string RmiName_PlayerStatPointChangeV2Req="PlayerStatPointChangeV2Req";
public const string RmiName_PlayerStatPointInitV2Req="PlayerStatPointInitV2Req";
public const string RmiName_PlayerStatV2Req="PlayerStatV2Req";
public const string RmiName_PlayerDeathInfoReq="PlayerDeathInfoReq";
public const string RmiName_RecoverPlayerExpReq="RecoverPlayerExpReq";
public const string RmiName_PlayerClassUpV2Req="PlayerClassUpV2Req";
public const string RmiName_QuickslotSetReq="QuickslotSetReq";
public const string RmiName_PlayerExpRecoveryPopupReq="PlayerExpRecoveryPopupReq";
public const string RmiName_RTTPlayerMoveV2Req="RTTPlayerMoveV2Req";
public const string RmiName_QuestAbandonV2Req="QuestAbandonV2Req";
public const string RmiName_QuestAcceptV2Req="QuestAcceptV2Req";
public const string RmiName_QuestCompleteV2Req="QuestCompleteV2Req";
public const string RmiName_QuestConditionCompleteV2Req="QuestConditionCompleteV2Req";
public const string RmiName_QuestListV2Req="QuestListV2Req";
public const string RmiName_QuestPortalV2Req="QuestPortalV2Req";
public const string RmiName_QuestRegisterV2Req="QuestRegisterV2Req";
public const string RmiName_QuestRerollV2Req="QuestRerollV2Req";
public const string RmiName_QuestRewardV2Req="QuestRewardV2Req";
public const string RmiName_QuestTalkCompleteV2Req="QuestTalkCompleteV2Req";
public const string RmiName_TutorialSkipV2Req="TutorialSkipV2Req";
public const string RmiName_GuildRelationReq="GuildRelationReq";
public const string RmiName_PlayerRelationReq="PlayerRelationReq";
public const string RmiName_RideAttachDeleteV2Req="RideAttachDeleteV2Req";
public const string RmiName_RideAttachDisassembleV2Req="RideAttachDisassembleV2Req";
public const string RmiName_RideAttachEquipOffV2Req="RideAttachEquipOffV2Req";
public const string RmiName_RideAttachEquipV2Req="RideAttachEquipV2Req";
public const string RmiName_RideAttachGachaV2Req="RideAttachGachaV2Req";
public const string RmiName_RideAttachInvenExtendV2Req="RideAttachInvenExtendV2Req";
public const string RmiName_RideEquipOffV2Req="RideEquipOffV2Req";
public const string RmiName_RideEquipV2Req="RideEquipV2Req";
public const string RmiName_RideGachaV2Req="RideGachaV2Req";
public const string RmiName_RideMixV2Req="RideMixV2Req";
public const string RmiName_RideSitOffV2Req="RideSitOffV2Req";
public const string RmiName_RideSitV2Req="RideSitV2Req";
public const string RmiName_BuyCashShopItemV2Req="BuyCashShopItemV2Req";
public const string RmiName_BuyGameShopItemV2Req="BuyGameShopItemV2Req";
public const string RmiName_GameShopSellItemV2Req="GameShopSellItemV2Req";
public const string RmiName_ChangeSiegeModeV2Req="ChangeSiegeModeV2Req";
public const string RmiName_ChoiceSiegeWarFactionV2Req="ChoiceSiegeWarFactionV2Req";
public const string RmiName_GetSiegeWarInfoV2Req="GetSiegeWarInfoV2Req";
public const string RmiName_GetSiegeWarMatchInfoV2Req="GetSiegeWarMatchInfoV2Req";
public const string RmiName_BuffListInfoV2Req="BuffListInfoV2Req";
public const string RmiName_SkillChangeAutoUseV2Req="SkillChangeAutoUseV2Req";
public const string RmiName_SkillChangePresetV2Req="SkillChangePresetV2Req";
public const string RmiName_SkillEquipV2Req="SkillEquipV2Req";
public const string RmiName_SkillHitV2Req="SkillHitV2Req";
public const string RmiName_SkillLearnV2Req="SkillLearnV2Req";
public const string RmiName_SkillLevelUpV2Req="SkillLevelUpV2Req";
public const string RmiName_SkillListInfoV2Req="SkillListInfoV2Req";
public const string RmiName_SkillUnEquipV2Req="SkillUnEquipV2Req";
public const string RmiName_SkillUpgradeV2Req="SkillUpgradeV2Req";
public const string RmiName_SkillUseV2Req="SkillUseV2Req";
public const string RmiName_RTTSkillUseV2Req="RTTSkillUseV2Req";
public const string RmiName_RTTSkillHitV2Req="RTTSkillHitV2Req";
public const string RmiName_PlayerTitleChangeV2Req="PlayerTitleChangeV2Req";
public const string RmiName_TitleChangeV2Req="TitleChangeV2Req";
public const string RmiName_TitleListV2Req="TitleListV2Req";
public const string RmiName_TradeCronAverageBalanceReq="TradeCronAverageBalanceReq";
public const string RmiName_TradeCronBalanceReq="TradeCronBalanceReq";
public const string RmiName_TradeCronBuyReq="TradeCronBuyReq";
public const string RmiName_TradeCronInfoReq="TradeCronInfoReq";
public const string RmiName_TradeCronListReq="TradeCronListReq";
public const string RmiName_TradeCronPreviousDayBalanceReq="TradeCronPreviousDayBalanceReq";
public const string RmiName_TradeCronSellReq="TradeCronSellReq";
public const string RmiName_TradeCronWeeklyBalanceReq="TradeCronWeeklyBalanceReq";
public const string RmiName_TradePersonalRequestReq="TradePersonalRequestReq";
public const string RmiName_TradePersonalAcceptReq="TradePersonalAcceptReq";
public const string RmiName_TradePersonalRefuseReq="TradePersonalRefuseReq";
public const string RmiName_TradePersonalCancelReq="TradePersonalCancelReq";
public const string RmiName_TradePersonalWithdrawReq="TradePersonalWithdrawReq";
public const string RmiName_TradePersonalFinishReq="TradePersonalFinishReq";
public const string RmiName_TradePersonalHistoryReq="TradePersonalHistoryReq";
public const string RmiName_TradeCronMyListReq="TradeCronMyListReq";
public const string RmiName_TradeCronSettleReq="TradeCronSettleReq";
public const string RmiName_TradeCronTradesReq="TradeCronTradesReq";
public const string RmiName_TradeCronTimeToNextChangeBalanceReq="TradeCronTimeToNextChangeBalanceReq";
public const string RmiName_TradeCronCancelReq="TradeCronCancelReq";
public const string RmiName_TradeCronReclaimExpiredReq="TradeCronReclaimExpiredReq";
public const string RmiName_TradeCronRemainingCanceledPenaltyTimeReq="TradeCronRemainingCanceledPenaltyTimeReq";
public const string RmiName_TradeItemRegistReq="TradeItemRegistReq";
public const string RmiName_TradeItemCancelReq="TradeItemCancelReq";
public const string RmiName_TradeItemBuyReq="TradeItemBuyReq";
public const string RmiName_TradeItemWithdrawReq="TradeItemWithdrawReq";
public const string RmiName_TradeItemFinishReq="TradeItemFinishReq";
public const string RmiName_TradeItemHistoryReq="TradeItemHistoryReq";
public const string RmiName_TradeItemSearchCategoryReq="TradeItemSearchCategoryReq";
public const string RmiName_TradeItemSearchItemIndexReq="TradeItemSearchItemIndexReq";
public const string RmiName_TradeItemBookmarkAddReq="TradeItemBookmarkAddReq";
public const string RmiName_TradeItemBookmarkDeleteReq="TradeItemBookmarkDeleteReq";
public const string RmiName_WeaponAppearanceCollectListV2Req="WeaponAppearanceCollectListV2Req";
public const string RmiName_WeaponAppearanceEquipV2Req="WeaponAppearanceEquipV2Req";
public const string RmiName_WeaponAppearanceExtractFromItemV2Req="WeaponAppearanceExtractFromItemV2Req";
public const string RmiName_WeaponAppearanceHiddenV2Req="WeaponAppearanceHiddenV2Req";
public const string RmiName_WeaponAppearanceListV2Req="WeaponAppearanceListV2Req";
public const string RmiName_WeaponAppearanceUnequipV2Req="WeaponAppearanceUnequipV2Req";
public const string RmiName_AccountCreateNameReq="AccountCreateNameReq";
public const string RmiName_ZoneStatusReq="ZoneStatusReq";
public const string RmiName_BloodFogEnterReq="BloodFogEnterReq";
public const string RmiName_BloodFogLeaveReq="BloodFogLeaveReq";
public const string RmiName_BloodFogUseBuffReq="BloodFogUseBuffReq";
public const string RmiName_C2SRttReq="C2SRttReq";
public const string RmiName_C2SRttRes="C2SRttRes";
       
public const string RmiName_First = RmiName_PlayerSelectReq;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_PlayerSelectReq="";
public const string RmiName_PlayerEnterStageFirstReq="";
public const string RmiName_PlayerEnterStageSecondReq="";
public const string RmiName_PlayerEnterStageThirdReq="";
public const string RmiName_PlayerEnterStageFourthReq="";
public const string RmiName_PlayerEnterStageFifthReq="";
public const string RmiName_PlayerGameEnterReq="";
public const string RmiName_AuthenticateBotCredentialReq="";
public const string RmiName_DesignateBindStoneReq="";
public const string RmiName_PortalByBindStoneReq="";
public const string RmiName_PlayerBlackRosterGetPreferenceReq="";
public const string RmiName_PlayerBlackRosterObservingReq="";
public const string RmiName_PlayerBlackRosterProvocationReq="";
public const string RmiName_PlayerBlackRosterRankReq="";
public const string RmiName_PlayerBlackRosterRevengeReq="";
public const string RmiName_PlayerBlackRosterSetPreferenceReq="";
public const string RmiName_PlayerBlackRostersReq="";
public const string RmiName_PlayerBlackRosterLastWeekRankReq="";
public const string RmiName_CheatMessageV2Req="";
public const string RmiName_AccountBlockPlayerAddReq="";
public const string RmiName_AccountBlockPlayerDeleteReq="";
public const string RmiName_AccountBlockPlayerReasonEditReq="";
public const string RmiName_AccountBlockPlayersReq="";
public const string RmiName_ChatMessageV2Req="";
public const string RmiName_PlayerSearchV2Req="";
public const string RmiName_LinkItemInfoReq="";
public const string RmiName_CostumeCardBuildReq="";
public const string RmiName_CostumeCardGachaReq="";
public const string RmiName_CostumeCardInfoReq="";
public const string RmiName_CostumeCardMixReq="";
public const string RmiName_CostumeCollectReq="";
public const string RmiName_CostumeEquipBodyReq="";
public const string RmiName_CostumeEquipBodyShowReq="";
public const string RmiName_CostumeEquipHeadReq="";
public const string RmiName_CostumeEquipHeadShowReq="";
public const string RmiName_CostumeInfoReq="";
public const string RmiName_CostumeConfirmAcceptReq="";
public const string RmiName_CostumeConfirmChangeReq="";
public const string RmiName_CostumeConfirmInfoReq="";
public const string RmiName_PortalEffectReq="";
public const string RmiName_AttainmentDailyRewardV2Req="";
public const string RmiName_AttainmentNormalRewardV2Req="";
public const string RmiName_AttendanceRewardV2Req="";
public const string RmiName_BossScheduleReq="";
public const string RmiName_EventExchangeRewardV2Req="";
public const string RmiName_GuildAdminBuffActiveReq="";
public const string RmiName_GuildAdminBuffBuyReq="";
public const string RmiName_GuildAdminInfoReq="";
public const string RmiName_GuildAdminLevelUpReq="";
public const string RmiName_GuildAdminMasterChangeReq="";
public const string RmiName_GuildAdminMemberBanishReq="";
public const string RmiName_GuildAdminMemberUpdateReq="";
public const string RmiName_GuildAdminUpdateBaseReq="";
public const string RmiName_GuildAdminUpdateIntroReq="";
public const string RmiName_GuildAdminUpdateNoticeReq="";
public const string RmiName_GuildAdminUpdateTendencyReq="";
public const string RmiName_GuildAdminUpdateTypeReq="";
public const string RmiName_GuildAttendReq="";
public const string RmiName_GuildBuffInfoReq="";
public const string RmiName_GuildCreateReq="";
public const string RmiName_GuildDeleteReq="";
public const string RmiName_GuildDonateReq="";
public const string RmiName_GuildDonationByCronV2Req="";
public const string RmiName_GuildFindReq="";
public const string RmiName_GuildHistroyReq="";
public const string RmiName_GuildInfoCallReq="";
public const string RmiName_GuildInfoReq="";
public const string RmiName_GuildJoinRequestConfirmReq="";
public const string RmiName_GuildJoinRequestListReq="";
public const string RmiName_GuildLeaveReq="";
public const string RmiName_GuildLiveInviteConfirmReq="";
public const string RmiName_GuildLiveInviteReq="";
public const string RmiName_GuildMemberInfoReq="";
public const string RmiName_GuildSignRequestCancelReq="";
public const string RmiName_GuildSignRequestListReq="";
public const string RmiName_GuildSignRequestReq="";
public const string RmiName_GuildVoteInfoReq="";
public const string RmiName_GuildVoteMasterImpeachReq="";
public const string RmiName_GuildVoteReq="";
public const string RmiName_GuildWaitingMemberListV2Req="";
public const string RmiName_GuildWarehouseChangeSizeV2Req="";
public const string RmiName_GuildWarehouseInfoV2Req="";
public const string RmiName_GuildWarehouseItemMoveV2Req="";
public const string RmiName_GuildWarehouseWalletMoveV2Req="";
public const string RmiName_GuildTerritoryInfoReq="";
public const string RmiName_GuildTerritorySetReq="";
public const string RmiName_WorldTerritoryOverviewReq="";
public const string RmiName_DungeonEnterV2Req="";
public const string RmiName_DungeonGiveUpV2Req="";
public const string RmiName_DungeonLeaveV2Req="";
public const string RmiName_DungeonLoadingCompleteV2Req="";
public const string RmiName_InteractStartReq="";
public const string RmiName_InteractEndReq="";
public const string RmiName_InteractCancelReq="";
public const string RmiName_EquipmentVisibleV2Req="";
public const string RmiName_InventoryChangeSizeV2Req="";
public const string RmiName_ItemAddOptionV2Req="";
public const string RmiName_ItemChangeOptionV2Req="";
public const string RmiName_ItemCollectionBookmarksRegisterV2Req="";
public const string RmiName_ItemCollectionBookmarksUnregisterV2Req="";
public const string RmiName_ItemCollectionRegisterV2Req="";
public const string RmiName_ItemCombineV2Req="";
public const string RmiName_ItemDeleteV2Req="";
public const string RmiName_ItemDisassembleV2Req="";
public const string RmiName_ItemEnchantV2Req="";
public const string RmiName_ItemEquipV2Req="";
public const string RmiName_ItemIntensionV2Req="";
public const string RmiName_ItemMixOptionV2Req="";
public const string RmiName_ItemPackageUseV2Req="";
public const string RmiName_ItemProductionV2Req="";
public const string RmiName_ItemSelectUseV2Req="";
public const string RmiName_ItemUpgradeV2Req="";
public const string RmiName_ItemUseV2Req="";
public const string RmiName_PkLootingItemV2Req="";
public const string RmiName_PkLootingListV2Req="";
public const string RmiName_WarehouseChangeSizeV2Req="";
public const string RmiName_WarehouseInfoV2Req="";
public const string RmiName_WarehouseItemMoveV2Req="";
public const string RmiName_ItemSetLockReq="";
public const string RmiName_ItemMarketPriceReq="";
public const string RmiName_ItemInheritReq="";
public const string RmiName_MailListV2Req="";
public const string RmiName_MailReadAllV2Req="";
public const string RmiName_MailReadV2Req="";
public const string RmiName_MatchingApplyReq="";
public const string RmiName_MatchingCancelReq="";
public const string RmiName_MatchingReplyReq="";
public const string RmiName_AuthenticatePlayerCredentialReq="";
public const string RmiName_BroadCastContextReq="";
public const string RmiName_CutSceneEndV2Req="";
public const string RmiName_CutSceneStartV2Req="";
public const string RmiName_LogOutReq="";
public const string RmiName_PortalV2Req="";
public const string RmiName_ReturnToLobbyReq="";
public const string RmiName_ServerTimeV2Req="";
public const string RmiName_TestPacketV2Req="";
public const string RmiName_TriggerActivateV2Req="";
public const string RmiName_UnionV2Req="";
public const string RmiName_ZoneLoadingCompletedReq="";
public const string RmiName_BossDamagedInfoReq="";
public const string RmiName_PartyChangeLootingReq="";
public const string RmiName_PartyCreateReq="";
public const string RmiName_PartyDisbandReq="";
public const string RmiName_PartyDungeonEntranceInquiryReq="";
public const string RmiName_PartyEnterDungeonReplyReq="";
public const string RmiName_PartyEnterDungeonReq="";
public const string RmiName_PartyInfoReq="";
public const string RmiName_PartyInviteReplyReq="";
public const string RmiName_PartyInviteReq="";
public const string RmiName_PartyLeaderChangeReq="";
public const string RmiName_PartyLeaveReq="";
public const string RmiName_PartyMemberKickReq="";
public const string RmiName_PartySuggestionPlayersReq="";
public const string RmiName_PartyEnterDungeonCanceledReq="";
public const string RmiName_PetCollectInfoV2Req="";
public const string RmiName_PetEquipOffV2Req="";
public const string RmiName_PetEquipV2Req="";
public const string RmiName_PetFeedUseV2Req="";
public const string RmiName_PetGachaV2Req="";
public const string RmiName_PetInfoV2Req="";
public const string RmiName_PetMixV2Req="";
public const string RmiName_PetUpgradeV2Req="";
public const string RmiName_PetInActiveBuffReq="";
public const string RmiName_PhaseFieldEndV2Req="";
public const string RmiName_PhaseFieldStartV2Req="";
public const string RmiName_PlayerDeleteReq="";
public const string RmiName_PlayerGetMacroReq="";
public const string RmiName_PlayerMapMoveV2Req="";
public const string RmiName_PlayerMoveV2Req="";
public const string RmiName_PlayerMoveZoneV2Req="";
public const string RmiName_PlayerResurrectionV2Req="";
public const string RmiName_PlayerSetMacroReq="";
public const string RmiName_PlayerSlotChangeV2Req="";
public const string RmiName_PlayerStatPointChangeV2Req="";
public const string RmiName_PlayerStatPointInitV2Req="";
public const string RmiName_PlayerStatV2Req="";
public const string RmiName_PlayerDeathInfoReq="";
public const string RmiName_RecoverPlayerExpReq="";
public const string RmiName_PlayerClassUpV2Req="";
public const string RmiName_QuickslotSetReq="";
public const string RmiName_PlayerExpRecoveryPopupReq="";
public const string RmiName_RTTPlayerMoveV2Req="";
public const string RmiName_QuestAbandonV2Req="";
public const string RmiName_QuestAcceptV2Req="";
public const string RmiName_QuestCompleteV2Req="";
public const string RmiName_QuestConditionCompleteV2Req="";
public const string RmiName_QuestListV2Req="";
public const string RmiName_QuestPortalV2Req="";
public const string RmiName_QuestRegisterV2Req="";
public const string RmiName_QuestRerollV2Req="";
public const string RmiName_QuestRewardV2Req="";
public const string RmiName_QuestTalkCompleteV2Req="";
public const string RmiName_TutorialSkipV2Req="";
public const string RmiName_GuildRelationReq="";
public const string RmiName_PlayerRelationReq="";
public const string RmiName_RideAttachDeleteV2Req="";
public const string RmiName_RideAttachDisassembleV2Req="";
public const string RmiName_RideAttachEquipOffV2Req="";
public const string RmiName_RideAttachEquipV2Req="";
public const string RmiName_RideAttachGachaV2Req="";
public const string RmiName_RideAttachInvenExtendV2Req="";
public const string RmiName_RideEquipOffV2Req="";
public const string RmiName_RideEquipV2Req="";
public const string RmiName_RideGachaV2Req="";
public const string RmiName_RideMixV2Req="";
public const string RmiName_RideSitOffV2Req="";
public const string RmiName_RideSitV2Req="";
public const string RmiName_BuyCashShopItemV2Req="";
public const string RmiName_BuyGameShopItemV2Req="";
public const string RmiName_GameShopSellItemV2Req="";
public const string RmiName_ChangeSiegeModeV2Req="";
public const string RmiName_ChoiceSiegeWarFactionV2Req="";
public const string RmiName_GetSiegeWarInfoV2Req="";
public const string RmiName_GetSiegeWarMatchInfoV2Req="";
public const string RmiName_BuffListInfoV2Req="";
public const string RmiName_SkillChangeAutoUseV2Req="";
public const string RmiName_SkillChangePresetV2Req="";
public const string RmiName_SkillEquipV2Req="";
public const string RmiName_SkillHitV2Req="";
public const string RmiName_SkillLearnV2Req="";
public const string RmiName_SkillLevelUpV2Req="";
public const string RmiName_SkillListInfoV2Req="";
public const string RmiName_SkillUnEquipV2Req="";
public const string RmiName_SkillUpgradeV2Req="";
public const string RmiName_SkillUseV2Req="";
public const string RmiName_RTTSkillUseV2Req="";
public const string RmiName_RTTSkillHitV2Req="";
public const string RmiName_PlayerTitleChangeV2Req="";
public const string RmiName_TitleChangeV2Req="";
public const string RmiName_TitleListV2Req="";
public const string RmiName_TradeCronAverageBalanceReq="";
public const string RmiName_TradeCronBalanceReq="";
public const string RmiName_TradeCronBuyReq="";
public const string RmiName_TradeCronInfoReq="";
public const string RmiName_TradeCronListReq="";
public const string RmiName_TradeCronPreviousDayBalanceReq="";
public const string RmiName_TradeCronSellReq="";
public const string RmiName_TradeCronWeeklyBalanceReq="";
public const string RmiName_TradePersonalRequestReq="";
public const string RmiName_TradePersonalAcceptReq="";
public const string RmiName_TradePersonalRefuseReq="";
public const string RmiName_TradePersonalCancelReq="";
public const string RmiName_TradePersonalWithdrawReq="";
public const string RmiName_TradePersonalFinishReq="";
public const string RmiName_TradePersonalHistoryReq="";
public const string RmiName_TradeCronMyListReq="";
public const string RmiName_TradeCronSettleReq="";
public const string RmiName_TradeCronTradesReq="";
public const string RmiName_TradeCronTimeToNextChangeBalanceReq="";
public const string RmiName_TradeCronCancelReq="";
public const string RmiName_TradeCronReclaimExpiredReq="";
public const string RmiName_TradeCronRemainingCanceledPenaltyTimeReq="";
public const string RmiName_TradeItemRegistReq="";
public const string RmiName_TradeItemCancelReq="";
public const string RmiName_TradeItemBuyReq="";
public const string RmiName_TradeItemWithdrawReq="";
public const string RmiName_TradeItemFinishReq="";
public const string RmiName_TradeItemHistoryReq="";
public const string RmiName_TradeItemSearchCategoryReq="";
public const string RmiName_TradeItemSearchItemIndexReq="";
public const string RmiName_TradeItemBookmarkAddReq="";
public const string RmiName_TradeItemBookmarkDeleteReq="";
public const string RmiName_WeaponAppearanceCollectListV2Req="";
public const string RmiName_WeaponAppearanceEquipV2Req="";
public const string RmiName_WeaponAppearanceExtractFromItemV2Req="";
public const string RmiName_WeaponAppearanceHiddenV2Req="";
public const string RmiName_WeaponAppearanceListV2Req="";
public const string RmiName_WeaponAppearanceUnequipV2Req="";
public const string RmiName_AccountCreateNameReq="";
public const string RmiName_ZoneStatusReq="";
public const string RmiName_BloodFogEnterReq="";
public const string RmiName_BloodFogLeaveReq="";
public const string RmiName_BloodFogUseBuffReq="";
public const string RmiName_C2SRttReq="";
public const string RmiName_C2SRttRes="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

